.wrapper{margin:0 auto;width:80%;max-width:1300px}.wrapper-small{margin:0 auto;width:80%;max-width:1100px}.section{padding:5em 0}.title-two{color:#000;font-weight:700;font-size:2.8rem;margin-bottom:1em}.title-three{color:#000;font-size:2rem;font-weight:400}.title-four{font-size:1.9rem;font-weight:700;color:#000}.text{color:#000;font-size:1.8rem}.text-bold{font-weight:500}a{text-decoration:none;cursor:pointer}.btn{display:flex;justify-content:space-around;align-items:center;height:70px;width:100%;color:#fff;background:linear-gradient(115deg,#332879,#372779 60%,#ad0c7a);padding:0 1em;overflow:hidden;font-size:2rem;border:none;border-radius:0;-webkit-clip-path:polygon(0 0,100% 0,100% 90%,75% 90%,65% 100%,0 100%);clip-path:polygon(0 0,100% 0,100% 90%,75% 90%,65% 100%,0 100%);margin:1em 0}.btn:hover{color:#fff;background:linear-gradient(115deg,#332879,#372779 45%,#ad0c7a 75%,#ad0c7a)}.btn img{height:25px;margin-left:2rem}.break{display:block}.white-block{position:absolute;height:40px;width:35%;background-color:#fff}.white-block-right{bottom:0;right:-50px;transform:skew(-45deg)}.white-block-left{display:none;bottom:-40px;left:-50px;transform:skew(-45deg)}.line{display:flex;position:relative;width:100%;height:20px}.line-block{position:absolute;height:100%}.line-block--one{width:20%;border-bottom:2px solid #e4e4e4;border-right:3px solid #e4e4e4;transform:skew(-45deg)}.line-block--two{width:calc(80% - 8px);border-top:2px solid #e4e4e4;right:0}@media (min-width:768px){.title-two{font-size:3.5rem}.title-four{font-size:2.5rem}.text{font-size:2rem}.btn{width:280px;padding:0 2em}.white-block-left{display:block}.line__wrapper{width:90%;margin:0 auto}}@media (min-width:992px){.section{padding:10em 0}.title-two{font-size:4.5rem}.title-three{font-size:2.2rem}}.navbar{position:relative;position:sticky;top:0;z-index:1;background-color:#fff;padding:0}.navbar-brand{z-index:1;margin:0}.navbar-brand img{height:80px}.navbar .nav-link{font-size:2rem}.navbar a{color:#000}.navbar .dropdown-item{font-size:1.5rem}.navbar-toggler{padding:2em 1em;margin-right:1em}.container-fluid{padding:0;margin:0}.collapse{background-color:#fff}.nav-item{padding-left:1em}.dropdown-menu{background-color:#fff;border:none}.flag{height:25px}@media (min-width:768px){.navbar-brand{position:relative;bottom:-20px}}@media (min-width:992px){.container-fluid{width:80%;max-width:1300px;margin:0 auto}.nav-item{margin:0 1rem;padding:0}.nav-link{padding:1em}.dropdown-menu{border-radius:0;padding:0}.dropdown-item{padding:1em}}@media (min-width:1200px){.nav-item{margin-left:3rem}}.about__box{display:flex;flex-direction:column}.about__tile{flex:1;margin:1.5em 0}.about__tile--one img{width:100%}.about__texts{margin-top:1rem;display:flex;justify-content:center}.about__texts__four{margin:0 .3em;letter-spacing:-1px}.about__link{color:#000;font-size:2rem}.about__link img{height:25px}.about__link:hover{color:#000}@media (min-width:768px){.about__box{flex-direction:row;align-items:center}.about__tile{margin:0}.about__tile--one img{width:80%;height:100%}.about__texts__four{margin:0 1em}}@media (min-width:1200px){.about__tile{margin:0}.about__tile--one img{width:65%}}.accordions__box{display:flex;flex-direction:column}.accordions__btns{display:flex}.accordions__tile{flex:1;margin:1.5em 0}.accordions__tile--one{display:flex;flex-direction:column}.accordions__tile-btn{flex:1;display:flex;justify-content:center;align-items:center;color:#000;height:50px;font-size:1.4rem;margin:0;border:none;background-color:transparent;-webkit-clip-path:polygon(0 0,100% 0,100% 90%,75% 90%,65% 100%,0 100%);clip-path:polygon(0 0,100% 0,100% 90%,75% 90%,65% 100%,0 100%)}.accordions__tile-btn--active{color:#fff;background:linear-gradient(115deg,#332879,#372779 60%,#ad0c7a)}.accordions__tile-btn--active:hover{color:#fff;background:linear-gradient(115deg,#332879,#372779 45%,#ad0c7a 75%,#ad0c7a)}.accordions__tile--two img{width:100%}.accordion{margin-top:2rem;flex-direction:column}.accordion,.accordion__tile{display:flex}.accordion__btn{font-size:1.9rem;font-weight:700;color:#7f7f7f}.accordion__left{margin-right:1rem}.accordion__left-bar{width:2px;height:40px;background-color:#7f7f7f}@media (min-width:992px){.accordions__box{flex-direction:row}.accordions__tile--two img{display:block;width:80%;margin:0 auto}.accordion__btn{font-size:2.5rem}}.footer__bottom{padding-bottom:2em}.footer__bottom--wrapper{display:flex;flex-direction:column}.footer__bottom-tile--one img{display:block;height:80px;margin:0 auto}.footer__bottom-tile--two{margin:3em auto}.footer__bottom-tile--two a{margin:0 .5em;color:#000;border-radius:50%;padding:1.5em;border:1px solid #e4e4e4}.footer__bottom-tile--two a img{height:20px;width:20px}.footer__bottom-tile--nav a{color:#000;font-weight:700}.footer__bottom-tile--nav ul{padding:0}.footer__bottom-tile--nav ul li{list-style-type:none}.footer__bottom-tile--nav ul li a{font-weight:400}.footer__bottom-tile--three ul{padding:0}.footer__bottom-tile--three ul li{list-style-type:none}.footer__bottom-tile--three ul li a{color:#7f7f7f}.footer__bar-text{font-size:1.8rem;color:#7f7f7f}@media (min-width:768px){.footer__bottom-left{display:flex;flex-direction:column;justify-content:space-between;align-items:flex-start}.footer__bottom-mid{display:flex}.footer__bottom-tile--one img,.footer__bottom-tile--two{margin-left:0}.footer__bottom-tile--nav{margin:0 1em}.footer__bottom-tile--three{margin:2em 0;width:100%}}@media (min-width:1620px){.footer__bottom--wrapper{flex-direction:row}.footer__bottom-left{flex:1}.footer__bottom-mid{flex:1.6;flex-wrap:wrap;align-items:flex-end}.footer__bottom-right{flex:1}.footer__bottom-tile--one img{height:100px}.footer__bottom-tile--two{margin:0 0 2em}.footer__bottom-tile--nav{margin:2em 4em 0}.footer__bottom-tile--three{margin:0 1.5em}.footer__bar--wrapper{margin-top:2em}}*,:after,:before{margin:0;padding:0;box-sizing:border-box}html{font-size:62.5%;scroll-behavior:smooth}cursor body{font-size:1.8rem;overflow-x:hidden;background-color:#fff;color:#000;font-family:Alexandria,sans-serif}::-moz-selection{background-color:#352879;color:#fff}::selection{background-color:#352879;color:#fff}.spiner{position:fixed;display:flex;flex-direction:column;justify-content:center;align-items:center;top:0;bottom:0;right:0;left:0;z-index:2;transition:opacity .3s ease}.spiner,.spiner__img{background-color:#fff}.spiner__img{height:200px;animation:a 1s linear 1}.spiner__text{background-color:#fff;font-size:4rem;text-transform:uppercase;font-weight:700;color:#e3007a}@keyframes a{0%{transform:rotateY(0)}25%{transform:rotateY(60deg)}50%{transform:rotateY(1turn)}75%{transform:rotateY(60deg)}to{transform:rotateY(1turn)}}.cookie{position:fixed;display:flex;flex-direction:column;justify-content:center;align-items:center;left:50%;top:50%;transform:translate(-50%,-50%);padding:1em;width:100%;background:linear-gradient(180deg,#e3017a 42.71%,#7d2c6f);background:linear-gradient(180deg,#762c6e,#35297a)}.cookie-img{height:60px}.cookie-heading{font-size:6rem;font-weight:700;color:#fff}.cookie-text{text-align:center;font-size:1.6rem;color:#fff}.cookie__box{display:flex}.cookie__box-link{margin:0 .3em;padding:.5em;background-color:#fff;color:#352879;border:2px solid #fff;transition:background-color .3s ease,color .3s ease;font-size:1.8rem}.cookie__box-link:hover{background-color:transparent;color:#fff}.hidden-cookies{display:none}@media (min-width:768px){.cookie{padding:2em;max-width:420px}}.header{position:relative;height:calc(98vh - 85px);width:100%;overflow:hidden;background-color:#9e9a9a}.header__wrapper{display:flex;flex-direction:column;justify-content:center;align-items:flex-start;height:100%}.header__title{font-size:3.4rem;color:#fff;margin-bottom:2rem;font-weight:700}.div-margin{display:block;height:85px}@media (min-width:768px){.header__title{font-size:6rem}}@media (min-width:992px){.header__title{font-size:8rem}}.bar{position:relative;width:100%;height:450px;align-items:center;background-color:gray;overflow:hidden}.bar,.bar__wrapper{display:flex;justify-content:center}.bar__wrapper{flex-direction:column}.bar__title{font-size:3rem;color:#fff;font-weight:700}.bar__text{margin-top:.5em;color:#fff;font-size:2rem}.bar a{margin-top:2rem}.bar a,.bar a img{align-self:flex-end}.bar a img{height:30px}@media (min-width:768px){.bar{height:600px}.bar__title{font-size:5rem}}.offer__box{display:flex;flex-direction:column}.offer__tile{flex:1;margin:2em 0}.offer__tile-top{position:relative;background-color:gray;height:200px;overflow:hidden}.offer__tile-top:first-child{border-right:1px solid #e4e4e4}.offer__tile-bottom{padding:2em;border:1px solid #e4e4e4;border-top:none}.offer__tile-bottom a{display:flex;justify-content:space-between;color:#e3007a;font-size:2rem;font-weight:700;transition:.3s ease}.offer__tile-bottom a img{height:30px}@media (min-width:992px){.offer__box{flex-direction:row}.offer__tile{margin:0 2em}.offer__tile-top{height:270px}.offer__tile-bottom{padding:4em}}.news__box{display:flex;flex-direction:column}.news__tile{display:block;display:flex;flex:1;margin:2em 0}.news__tile-left{position:relative;background-color:grey;overflow:hidden;height:130px;width:100%}.news__tile-right{display:flex;flex-direction:column;justify-content:space-around;width:100%;margin-left:2em}.news__tile .date{font-size:1.6rem;color:#7f7f7f}@media (min-width:1200px){.news__box{flex-direction:row}.news__tile{margin:0 2em 0 0}}.future__wrapper{display:flex;flex-direction:column}.future__left{margin-bottom:2em}.future__right{height:50vh;background-color:grey}@media (min-width:992px){.future__wrapper{display:flex;flex-direction:row}.future__left{flex:3;margin:0 8em 0 0}.future__right{flex:2;height:auto}}@media (min-width:1200px){.future__left{flex:1;margin:0 20em 0 0}.future__right{flex:1}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
