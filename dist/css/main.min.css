.wrapper{margin:0 auto;width:80%;max-width:1300px}.wrapper-small{margin:0 auto;width:80%;max-width:1100px}.section{padding:5em 0}.title-two{color:#000;font-weight:700;font-size:2.8rem;margin-bottom:1em}.title-three{color:#000;font-size:2rem;font-weight:400}.title-four{font-size:1.9rem;font-weight:700;color:#000}.text{color:#000;font-size:1.8rem}.text-bold{font-weight:500}.text--white{color:#fff}a{text-decoration:none;cursor:pointer}.btn{display:flex;justify-content:space-around;align-items:center;height:70px;width:100%;color:#fff;background:linear-gradient(115deg,#332879,#372779 60%,#ad0c7a);padding:0 1em;overflow:hidden;font-size:2rem;border:none;border-radius:0;-webkit-clip-path:polygon(0 0,100% 0,100% 90%,75% 90%,65% 100%,0 100%);clip-path:polygon(0 0,100% 0,100% 90%,75% 90%,65% 100%,0 100%);margin:1em 0}.btn:hover{color:#fff;background:linear-gradient(115deg,#332879,#372779 45%,#ad0c7a 75%,#ad0c7a)}.btn img{height:25px;margin-left:2rem}.btn--white,.btn--white:hover{background:#fff;color:#000}.break{display:block}.white-block{position:absolute;width:35%;background-color:#fff}.white-block-right{height:40px;bottom:0;right:-50px;transform:skew(-45deg)}.white-block-left{height:20px;display:none;bottom:-20px;left:-50px;transform:skew(-45deg)}.white-block-clip{right:0;transform:skew(0);bottom:0;height:40px;-webkit-clip-path:polygon(15% 0,100% 0,100% 100%,0 100%);clip-path:polygon(15% 0,100% 0,100% 100%,0 100%)}.line{display:flex;position:relative;width:100%;height:20px}.line-block{position:absolute;height:100%}.line-block--one{width:20%;border-bottom:2px solid #e4e4e4;border-right:3px solid #e4e4e4;transform:skew(-45deg)}.line-block--two{width:calc(80% - 8px);border-top:2px solid #e4e4e4;right:0}.line-svg{display:none;position:absolute}@media (min-width:768px){.title-two{font-size:3.5rem}.title-four{font-size:2.5rem}.text{font-size:2rem}.btn{width:300px;padding:0 2em}.white-block-left{display:block}}@media (min-width:992px){.section{padding:6em 0}.title-two{font-size:4.5rem}.title-three{font-size:2.2rem}}@media (min-width:1200px){.line-svg{display:block}}.navbar{position:relative;position:sticky;top:0;z-index:10;background-color:#fff;padding:0}.navbar-brand{z-index:10;margin:0}.navbar-brand img{height:80px}.navbar .nav-link{font-size:2rem}.navbar a{color:#000}.navbar .dropdown-item{font-size:1.5rem}.navbar-toggler{padding:2em 1em;margin-right:1em}.container-fluid{padding:0;margin:0}.collapse{background-color:#fff}.nav-item{padding-left:1em}.dropdown-menu{background-color:#fff;border:none}.flag{height:25px}@media (min-width:992px){.container-fluid{width:80%;max-width:1300px;margin:0 auto}.nav-item{margin:0 1rem;padding:0}.nav-link{padding:1em}.dropdown-menu{border-radius:0;padding:0}.dropdown-item{padding:1em}}@media (min-width:1200px){.nav-item{margin-left:3rem}}.about__wrapper{position:relative}.about__box{display:flex;flex-direction:column}.about__tile{flex:1;margin:1.5em 0}.about__tile--one img{width:100%}.about__texts{margin-top:1rem;display:flex;justify-content:center}.about__texts__four{margin:0 .3em;letter-spacing:-1px}.about__link{color:#000;font-size:2rem}.about__link img{height:25px}.about__link:hover{color:#000}@media (min-width:768px){.about__box{flex-direction:row;align-items:center}.about__tile{margin:0}.about__tile--one img{width:80%;height:100%}.about__texts__four{margin:0 1em}}@media (min-width:1200px){.about__tile{margin:0}.about__tile--one img{width:65%}}.accordions__box{display:flex;flex-direction:column}.accordions__btns{display:flex}.accordions__tile{flex:1;margin:1.5em 0}.accordions__tile--one{display:flex;flex-direction:column}.accordions__tile-btn{flex:1;display:flex;justify-content:center;align-items:center;color:#000;height:50px;font-size:1.4rem;margin:0;border:none;background-color:transparent;-webkit-clip-path:polygon(0 0,100% 0,100% 90%,75% 90%,65% 100%,0 100%);clip-path:polygon(0 0,100% 0,100% 90%,75% 90%,65% 100%,0 100%)}.accordions__tile-btn--active{color:#fff;background:linear-gradient(115deg,#332879,#372779 60%,#ad0c7a)}.accordions__tile-btn--active:hover{color:#fff;background:linear-gradient(115deg,#332879,#372779 45%,#ad0c7a 75%,#ad0c7a)}.accordions__tile--two{position:relative}.accordions__tile--two img{width:100%}.accordion{margin-top:5rem;display:flex;flex-direction:column}.accordion__tile{border-left:3px solid #e4e4e4;padding-left:1em;margin-bottom:1em;transition:border-left .5s ease}.accordion__btn{font-size:1.9rem;font-weight:700;color:#7f7f7f;cursor:pointer;transition:color .5s ease}.accordion__info{overflow:hidden;max-height:0;transition:max-height .5s ease}.accordion__info-text{font-size:1.6rem}@media (min-width:768px){.accordions__tile-btn{font-size:1.8rem}}@media (min-width:992px){.accordions__box{flex-direction:row}.accordions__tile--two img{display:block;width:80%;margin:0 auto}.accordion__btn{font-size:2.5rem}}.active{max-height:200px}.active-two{color:#000}.active-three{border-left:3px solid #000}.footer__top{position:relative;background:linear-gradient(115deg,#332879,#372779 45%,#ad0c7a 75%,#ad0c7a)}.footer__top--wrapper{display:flex;flex-direction:column}.footer__top-left{margin:3em 0}.footer__top-left img{width:100%}.footer__top-right{margin-bottom:3em}.footer__bottom{padding-bottom:0}.footer__bottom--wrapper{display:flex;flex-direction:column}.footer__bottom-left a img{height:90px}.footer__bottom-tile--one{display:flex;flex-direction:row;margin:1em 0}.footer__bottom-tile--one a{border-radius:50%;padding:.6em;border:1px solid #000;margin:0 .3em;transition:transform .3s ease}.footer__bottom-tile--one a:first-child{margin-left:0}.footer__bottom-tile--one a img{height:20px;width:20px}.footer__bottom-tile--one a:hover{transform:scale(1.2)}.footer__bottom-tile--nav a,.footer__bottom-tile--two a{font-weight:700}.footer__bottom-tile--nav a:hover,.footer__bottom-tile--two a:hover{text-decoration:underline;color:#000}.footer__bottom-tile--nav ul,.footer__bottom-tile--two ul{list-style-type:none;padding:0}.footer__bottom-tile--nav ul li a,.footer__bottom-tile--two ul li a{color:#000;font-weight:400}.footer__bar{margin:.5em 0 1.5em;font-size:1.8rem}@media (min-width:768px){.footer__top--wrapper{justify-content:center;flex-direction:row}.footer__top-left{margin:0}.footer__top-left img{width:100%;margin:-3em 0 3em}.footer__top-right{display:flex;flex-direction:column;justify-content:center;margin:0 0 0 2em}.footer__bottom-mid{display:flex;flex-wrap:wrap}.footer__bottom-tile--nav{flex:1;margin:1em}}@media (min-width:992px){.footer__top-left{overflow:visible;flex:2}.footer__top-left img{width:70%}.footer__top-right{flex:3}}@media (min-width:1200px){.footer__bottom-left{display:flex;flex-direction:column;justify-content:space-between}.footer__bottom--wrapper{flex-direction:row}.footer__bottom-mid{display:grid;grid-template-columns:repeat(2,1fr);gap:1rem 5rem;margin:0 10rem 0 15rem}}*,:after,:before{margin:0;padding:0;box-sizing:border-box}html{font-size:62.5%;scroll-behavior:smooth}body{font-size:1.8rem;overflow-x:hidden;background-color:#fff;color:#000;font-family:Poppins,sans-serif}::-moz-selection{background-color:#352879;color:#fff}::selection{background-color:#352879;color:#fff}.line-svg--one{right:-10%;top:20%;width:35%}.line-svg--two{right:0;top:0;width:50%;-o-object-fit:cover;object-fit:cover}.line-svg--three{left:0;bottom:10%;transform:rotate(180deg)}.line-svg--five{left:-10%;width:30%;bottom:15%;transform:rotate(180deg)}.line-svg--six{right:0;top:25%;width:40%;transform:rotate(180deg);z-index:-1}.line-svg--seven{bottom:10%;left:-20%;width:80%;z-index:-1}.shadow-bg{box-shadow:0 2px 1px rgba(0,0,0,.09),0 4px 2px rgba(0,0,0,.09),0 8px 4px rgba(0,0,0,.09),0 16px 8px rgba(0,0,0,.09),0 32px 16px rgba(0,0,0,.09)}.spiner{position:fixed;display:flex;flex-direction:column;justify-content:center;align-items:center;top:0;bottom:0;right:0;left:0;z-index:100;transition:opacity .3s ease}.spiner,.spiner__img{background-color:#fff}.spiner__img{height:200px;animation:a 1s linear 1}.spiner__text{background-color:#fff;font-size:4rem;text-transform:uppercase;font-weight:700;color:#e3007a}@keyframes a{0%{transform:rotateY(0)}25%{transform:rotateY(60deg)}50%{transform:rotateY(1turn)}75%{transform:rotateY(60deg)}to{transform:rotateY(1turn)}}.cookie{position:fixed;display:flex;flex-direction:column;justify-content:center;align-items:center;left:50%;top:50%;transform:translate(-50%,-50%);padding:1em;width:100%;background:linear-gradient(180deg,#e3017a 42.71%,#7d2c6f);background:linear-gradient(180deg,#762c6e,#35297a);z-index:99}.cookie-img{height:60px}.cookie-heading{font-size:6rem;font-weight:700;color:#fff}.cookie-text{text-align:center;font-size:1.6rem;color:#fff}.cookie__box{display:flex}.cookie__box-link{margin:0 .3em;padding:.5em;background-color:#fff;color:#352879;border:2px solid #fff;transition:background-color .3s ease,color .3s ease;font-size:1.8rem}.cookie__box-link:hover{background-color:transparent;color:#fff}.hidden-cookies{display:none}@media (min-width:768px){.cookie{padding:2em;max-width:420px}}.header{position:relative;height:calc(98vh - 85px);width:100%;overflow:hidden;background-image:url(../img/imgnc/header-small.jpg);background-size:cover;background-position:50%}.header__wrapper{display:flex;flex-direction:column;justify-content:center;align-items:flex-start;height:100%}.header__title{font-size:3.4rem;color:#fff;margin-bottom:2rem;font-weight:700}.div-margin{display:block;height:85px}@media (min-width:768px){.header__title{font-size:6rem}}@media (min-width:992px){.header{background-image:url(../img/imgnc/header-big.jpg)}.header__title{font-size:8rem}}.bar{position:relative;width:100%;height:450px;align-items:center;background-color:grey;background-size:cover;background-position:50%;overflow:hidden}.bar,.bar__wrapper{display:flex;justify-content:center}.bar__wrapper{flex-direction:column}.bar__title{font-size:3rem;color:#fff;font-weight:700}.bar__text{margin-top:.5em;color:#fff;font-size:2rem}.bar a{margin-top:2rem}.bar a,.bar a img{align-self:flex-end}.bar a img{height:30px}@media (min-width:768px){.bar{height:600px}.bar__title{font-size:5rem}}.offer{position:relative}.offer-title{color:#fff;font-size:2rem;font-weight:700}.offer__box{display:flex;flex-direction:column}.offer-img{position:relative;width:100%;height:60vh;background-size:cover;background-position:top;background-repeat:no-repeat}.offer-img--one{background-image:url(../img/offer1.jpg)}.offer-img--two{background-image:url(../img/offer2.jpg)}.offer-img--three{background-image:url(../img/offer3.jpg)}.offer__left{margin-bottom:3em}.offer__left-block{display:none}.offer__left-img:hover .offer__left-hover{opacity:1}.offer__left-hover{display:flex;flex-direction:column;justify-content:center;height:100%;padding:.5em;transition:opacity .3s ease;opacity:0;background-color:rgba(0,0,0,.5)}.offer__right-tile--one{margin-bottom:3em}.offer__right-img:hover .offer__right-hover{opacity:1}.offer__right-hover{display:flex;flex-direction:column;justify-content:center;height:100%;padding:.5em;transition:opacity .3s ease;opacity:0;background-color:rgba(0,0,0,.5)}@media (min-width:370px){.offer__left-hover,.offer__right-hover{padding:1em}}@media (min-width:768px){.offer__left-hover,.offer__right-hover{padding:2em}}@media (min-width:992px){.offer__box{flex-direction:row}.offer__left{flex:2;margin:0}.offer__left-img{width:100%;height:75%}.offer__left-block{display:block;position:absolute;width:40%;background-color:#fff;height:20px;bottom:0;right:-50px;transform:skew(-45deg)}.offer__right{flex:1;margin-left:5em}.offer__right-img{width:330px;height:420px}.offer__right-tile--one{margin-bottom:5em}.offer__right-hover{padding:1em}}@media (min-width:1200px){.offer__left{flex:1}.offer__left-hover{padding:4em}.offer__right{flex:1;margin-left:10rem}.offer__right-img{width:350px}}.news__box{display:flex;flex-direction:column}.news__tile{display:block;display:flex;flex:1;margin:2em 0}.news__tile-left{position:relative;overflow:hidden;height:130px;width:100%;background-size:cover;background-position:50%}.news__tile-left--one,.news__tile-left--two{background-image:url(../img/news1.jpg)}.news__tile-right{display:flex;flex-direction:column;justify-content:space-around;width:100%;margin-left:2em}.news__tile .date{font-size:1.6rem;color:#7f7f7f}@media (min-width:1200px){.news__box{flex-direction:row}.news__tile{margin:0 2em 0 0}}.future__wrapper{display:flex;flex-direction:column}.future__left{margin-bottom:2em}.future__right{position:relative;height:50vh}.future__right img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.future__right .line-svg--eight{bottom:10%;left:-10%;width:100%;height:auto;transform:rotate(180deg)}@media (min-width:992px){.future__wrapper{display:flex;flex-direction:row}.future__left{flex:3;margin:0 8em 0 0}.future__right{flex:2;height:auto}}@media (min-width:1200px){.future__left{flex:1;margin:0 15em 0 0}.future__right{flex:1}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9jb21wb25lbnRzLnNjc3MiLCJtYWluLmNzcyIsIl9jb2xvcnMuc2NzcyIsIl9uYXYuc2NzcyIsIl9hYm91dC5zY3NzIiwiX2FjY29yZGlvbi5zY3NzIiwiX2Zvb3Rlci5zY3NzIiwibWFpbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQ0ksY0FBQSxBQUNBLFVBQUEsQUFDQSxnQkFBQSxDQ0NKLEFERUEsZUFDSSxjQUFBLEFBQ0EsVUFBQSxBQUNBLGdCQUFBLENDQ0osQURFQSxTQUNJLGFBQUEsQ0NDSixBREVBLFdBQ0ksV0VoQkksQUZpQkosZ0JBQUEsQUFDQSxpQkFBQSxBQUNBLGlCQUFBLENDQ0osQURDQSxhQUNJLFdFdEJJLEFGdUJKLGVBQUEsQUFDQSxlQUFBLENDRUosQURDQSxZQUNJLGlCQUFBLEFBQ0EsZ0JBQUEsQUFDQSxVRTlCSSxDRGdDUixBRENBLE1BQ0ksV0VsQ0ksQUZtQ0osZ0JBQUEsQ0NFSixBREFJLFdBQ0ksZUFBQSxDQ0VSLEFEQ0ksYUFDSSxVRTNDQSxDRDRDUixBREdBLEVBQ0kscUJBQUEsQUFDQSxjQUFBLENDQUosQURHQSxLQUNJLGFBQUEsQUFDQSw2QkFBQSxBQUNBLG1CQUFBLEFBQ0EsWUFBQSxBQUNBLFdBQUEsQUFDQSxXRTFESSxBRjJESiwrREFBQSxBQUNBLGNBQUEsQUFDQSxnQkFBQSxBQUNBLGVBQUEsQUFDQSxZQUFBLEFBQ0EsZ0JBQUEsQUFDQSx1RUFBQSwrREFBQSxBQUVBLFlBQUEsQ0NESixBREVJLFdBQ0ksV0VyRUEsQUZzRUEsMEVBQUEsQ0NBUixBREdJLFNBQ0ksWUFBQSxBQUNBLGdCQUFBLENDRFIsQURPSSw4QkFDSSxnQkVsRkEsQUZtRkEsVUVsRkEsQ0RpRlIsQURNQSxPQUNJLGFBQUEsQ0NISixBRE9BLGFBQ0ksa0JBQUEsQUFDQSxVQUFBLEFBQ0EscUJFaEdJLENENEZSLEFETUksbUJBQ0ksWUFBQSxBQUNBLFNBQUEsQUFDQSxZQUFBLEFBQ0Esc0JBQUEsQ0NKUixBRE9JLGtC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WixBTXZPQSx5QkFFUSxpQkFDSSxhQUFBLEFBQ0Esa0JBQUEsQ055T1YsQU10T00sY0FDSSxPQUFBLEFBQ0EsZ0JBQUEsQ053T1YsQU1yT00sZUFDSSxPQUFBLEFBQ0EsV0FBQSxDTnVPVixDQUNGLEFNaE9BLDBCQUVRLGNBQ0ksT0FBQSxBQUNBLGlCQUFBLENOaU9WLEFNOU5NLGVBQ0ksTUFBQSxDTmdPVixDQUNGIiwiZmlsZSI6Im1haW4ubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53cmFwcGVyIHtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIG1heC13aWR0aDogMTMwMHB4O1xyXG59XHJcblxyXG4ud3JhcHBlci1zbWFsbCB7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBtYXgtd2lkdGg6IDExMDBweDtcclxufVxyXG5cclxuLnNlY3Rpb24ge1xyXG4gICAgcGFkZGluZzogNWVtIDA7XHJcbn1cclxuXHJcbi50aXRsZS10d28ge1xyXG4gICAgY29sb3I6ICRibGFjaztcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBmb250LXNpemU6IDIuOHJlbTtcclxuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxufVxyXG4udGl0bGUtdGhyZWUge1xyXG4gICAgY29sb3I6ICRibGFjaztcclxuICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbn1cclxuXHJcbi50aXRsZS1mb3VyIHtcclxuICAgIGZvbnQtc2l6ZTogMS45cmVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBjb2xvcjogJGJsYWNrO1xyXG59XHJcblxyXG4udGV4dCB7XHJcbiAgICBjb2xvcjogJGJsYWNrO1xyXG4gICAgZm9udC1zaXplOiAxLjhyZW07XHJcblxyXG4gICAgJi1ib2xkIHtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgfVxyXG5cclxuICAgICYtLXdoaXRlIHtcclxuICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgfVxyXG59XHJcblxyXG5hIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmJ0biB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiA3MHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDExNWRlZywgcmdiYSg1MSwgNDAsIDEyMSwgMSkgMCUsIHJnYmEoNTUsIDM5LCAxMjEsIDEpIDYwJSwgcmdiYSgxNzMsIDEyLCAxMjIsIDEpIDEwMCUpO1xyXG4gICAgcGFkZGluZzogMCAxZW07XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgIGNsaXAtcGF0aDogcG9seWdvbigwIDAsIDEwMCUgMCwgMTAwJSA5MCUsIDc1JSA5MCUsIDY1JSAxMDAlLCAwIDEwMCUpO1xyXG5cclxuICAgIG1hcmdpbjogMWVtIDA7XHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMTVkZWcsIHJnYmEoNTEsIDQwLCAxMjEsIDEpIDAlLCByZ2JhKDU1LCAzOSwgMTIxLCAxKSA0NSUsIHJnYmEoMTczLCAxMiwgMTIyLCAxKSA3NSUsIHJnYmEoMTczLCAxMiwgMTIyLCAxKSAxMDAlKTtcclxuICAgIH1cclxuXHJcbiAgICBpbWcge1xyXG4gICAgICAgIGhlaWdodDogMjVweDtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMnJlbTtcclxuICAgIH1cclxuXHJcbiAgICAmLS13aGl0ZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xyXG4gICAgICAgIGNvbG9yOiAkYmxhY2s7XHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XHJcbiAgICAgICAgY29sb3I6ICRibGFjaztcclxuICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmJyZWFrIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG5cclxuLndoaXRlLWJsb2NrIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAzNSU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcblxyXG4gICAgJi1yaWdodCB7XHJcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICByaWdodDogLTUwcHg7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBza2V3KC00NWRlZyk7XHJcbiAgICB9XHJcblxyXG4gICAgJi1sZWZ0IHtcclxuICAgICAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICBib3R0b206IC0yMHB4O1xyXG4gICAgICAgIGxlZnQ6IC01MHB4O1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2tldygtNDVkZWcpO1xyXG4gICAgfVxyXG5cclxuICAgICYtY2xpcCB7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBza2V3KDApO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgICAgY2xpcC1wYXRoOiBwb2x5Z29uKDE1JSAwLCAxMDAlIDAsIDEwMCUgMTAwJSwgMCUgMTAwJSk7XHJcbiAgICB9XHJcblxyXG59XHJcbi5saW5lIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMjBweDtcclxuXHJcbiAgICAmLWJsb2Nre1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcblxyXG4gICAgJi1ibG9jay0tb25lIHtcclxuICAgICAgICB3aWR0aDogMjAlO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkZ3JleTtcclxuICAgICAgICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCAkZ3JleTtcclxuICAgICAgICB0cmFuc2Zvcm06IHNrZXcoLTQ1ZGVnKTtcclxuICAgIH1cclxuICAgICYtYmxvY2stLXR3byB7XHJcbiAgICAgICAgd2lkdGg6IGNhbGMoODAlIC0gOHB4KTtcclxuICAgICAgICBib3JkZXItdG9wOiAycHggc29saWQgJGdyZXk7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4ubGluZS1zdmcge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxufVxyXG5cclxuLy8gLmxpbmsge1xyXG4vLyAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4vLyAgICAgY29sb3I6ICRibGFjaztcclxuXHJcbi8vICAgICAmOmhvdmVyIHtcclxuLy8gICAgICAgICBjb2xvcjogJHBpbms7XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgJjo6YmVmb3JlIHtcclxuLy8gICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbi8vICAgICAgICAgY29udGVudDogJyc7XHJcbi8vICAgICAgICAgYm90dG9tOiAwO1xyXG4vLyAgICAgICAgIGxlZnQ6IDA7XHJcbi8vICAgICAgICAgaGVpZ2h0OiAycHg7XHJcbi8vICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbi8vICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrO1xyXG4vLyAgICAgICAgIHotaW5kZXg6IC0xO1xyXG4vLyAgICAgICAgIHRyYW5zaXRpb246IC4zcyBoZWlnaHQgZWFzZTtcclxuLy8gICAgIH1cclxuXHJcbi8vICAgICAmOmhvdmVyOjpiZWZvcmUge1xyXG4vLyAgICAgICAgIGhlaWdodDogMTAwJTtcclxuXHJcbi8vICAgICB9XHJcblxyXG4vLyB9XHJcblxyXG4vLyAuY3VzdG9tLWJ0biB7XHJcbi8vICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbi8vICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbi8vICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4vLyAgICAgICAgYmFja2dyb3VuZDogcmdiKDUzLDQwLDEyMSk7XHJcbi8vICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoNTMsNDAsMTIxLDEpIDAlLCByZ2JhKDk5LDI5LDEyMSwxKSA1MCUsIHJnYmEoMTQ3LDE4LDEyMiwxKSAxMDAlKTtcclxuLy8gICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbi8vICAgICAgICAgcGFkZGluZzogMWVtIDEuNWVtO1xyXG4vLyAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyBcclxuLy8gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuLy8gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbi8vICAgICAgICBib3JkZXI6IG5vbmU7XHJcbi8vICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4vLyAgICAgICAgICY6aG92ZXIge1xyXG4vLyAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4vLyAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2IoNzIsMzUsMTIxKTtcclxuLy8gICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDcyLDM1LDEyMSwxKSAwJSwgcmdiYSgxNDAsMjAsMTIyLDEpIDUwJSwgcmdiYSgyMDQsNSwxMjIsMSkgMTAwJSk7XHJcbi8vICAgICAgICAgfVxyXG5cclxuXHJcblxyXG4vLyAgICAgICAgICY6OmJlZm9yZSB7XHJcbi8vICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4vLyAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbi8vICAgICAgICAgICAgIGhlaWdodDogMjAlO1xyXG4vLyAgICAgICAgICAgICB3aWR0aDogIDQ1JTtcclxuLy8gICAgICAgICAgICAgbGVmdDogLTUwcHg7XHJcbi8vICAgICAgICAgICAgIHRyYW5zZm9ybTogc2tldyg0NWRlZyk7XHJcbi8vICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmV5LXR3bztcclxuLy8gICAgICAgICAgICAgYm90dG9tOiAtMXB4O1xyXG4vLyAgICAgICAgIH1cclxuXHJcblxyXG4vLyB9XHJcblxyXG4vLyBNZWRpdW0gZGV2aWNlcyAodGFibGV0cywgNzY4cHggYW5kIHVwKVxyXG5cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gICAgLnRpdGxlLXR3byB7XHJcbiAgICAgICAgZm9udC1zaXplOiAzLjVyZW07XHJcbiAgICB9XHJcbiAgICAudGl0bGUtZm91ciB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyLjVyZW07XHJcbiAgICB9XHJcbiAgICAudGV4dCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgfVxyXG4gICBcclxuICAgIC5idG4ge1xyXG4gICAgICAgIHdpZHRoOiAzMDBweDtcclxuICAgICAgICBwYWRkaW5nOiAwIDJlbTtcclxuICAgIH1cclxuXHJcbiAgICAud2hpdGUtYmxvY2sge1xyXG4gICAgICAgICYtbGVmdCB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyAubGluZSB7XHJcbiAgICAvLyAgICAgJl9fd3JhcHBlciB7XHJcbiAgICAvLyAgICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAvLyAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxufVxyXG5cclxuLy8gTGFyZ2UgZGV2aWNlcyAoZGVza3RvcHMsIDk5MnB4IGFuZCB1cClcclxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XHJcblxyXG4gICAgLnNlY3Rpb24ge1xyXG4gICAgICAgIHBhZGRpbmc6IDZlbSAwO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAudGl0bGUtdHdvIHtcclxuICAgICAgICBmb250LXNpemU6IDQuNXJlbTtcclxuICAgIH1cclxuICAgIC50aXRsZS10aHJlZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyLjJyZW07XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5AbWVkaWEobWluLXdpZHRoOiAxMjAwcHgpIHtcclxuICAgIC5saW5lLXN2ZyB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbn0iLCIud3JhcHBlciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogODAlO1xuICBtYXgtd2lkdGg6IDEzMDBweDtcbn1cblxuLndyYXBwZXItc21hbGwge1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDgwJTtcbiAgbWF4LXdpZHRoOiAxMTAwcHg7XG59XG5cbi5zZWN0aW9uIHtcbiAgcGFkZGluZzogNWVtIDA7XG59XG5cbi50aXRsZS10d28ge1xuICBjb2xvcjogIzAwMDAwMDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAyLjhyZW07XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLnRpdGxlLXRocmVlIHtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxuLnRpdGxlLWZvdXIge1xuICBmb250LXNpemU6IDEuOXJlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiAjMDAwMDAwO1xufVxuXG4udGV4dCB7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBmb250LXNpemU6IDEuOHJlbTtcbn1cbi50ZXh0LWJvbGQge1xuICBmb250LXdlaWdodDogNTAwO1xufVxuLnRleHQtLXdoaXRlIHtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmJ0biB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDcwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDExNWRlZywgcmdiKDUxLCA0MCwgMTIxKSAwJSwgcmdiKDU1LCAzOSwgMTIxKSA2MCUsIHJnYigxNzMsIDEyLCAxMjIpIDEwMCUpO1xuICBwYWRkaW5nOiAwIDFlbTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZm9udC1zaXplOiAycmVtO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGNsaXAtcGF0aDogcG9seWdvbigwIDAsIDEwMCUgMCwgMTAwJSA5MCUsIDc1JSA5MCUsIDY1JSAxMDAlLCAwIDEwMCUpO1xuICBtYXJnaW46IDFlbSAwO1xufVxuLmJ0bjpob3ZlciB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTE1ZGVnLCByZ2IoNTEsIDQwLCAxMjEpIDAlLCByZ2IoNTUsIDM5LCAxMjEpIDQ1JSwgcmdiKDE3MywgMTIsIDEyMikgNzUlLCByZ2IoMTczLCAxMiwgMTIyKSAxMDAlKTtcbn1cbi5idG4gaW1nIHtcbiAgaGVpZ2h0OiAyNXB4O1xuICBtYXJnaW4tbGVmdDogMnJlbTtcbn1cbi5idG4tLXdoaXRlIHtcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgY29sb3I6ICMwMDAwMDA7XG59XG4uYnRuLS13aGl0ZTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIGNvbG9yOiAjMDAwMDAwO1xufVxuXG4uYnJlYWsge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLndoaXRlLWJsb2NrIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMzUlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xufVxuLndoaXRlLWJsb2NrLXJpZ2h0IHtcbiAgaGVpZ2h0OiA0MHB4O1xuICBib3R0b206IDA7XG4gIHJpZ2h0OiAtNTBweDtcbiAgdHJhbnNmb3JtOiBza2V3KC00NWRlZyk7XG59XG4ud2hpdGUtYmxvY2stbGVmdCB7XG4gIGhlaWdodDogMjBweDtcbiAgZGlzcGxheTogbm9uZTtcbiAgYm90dG9tOiAtMjBweDtcbiAgbGVmdDogLTUwcHg7XG4gIHRyYW5zZm9ybTogc2tldygtNDVkZWcpO1xufVxuLndoaXRlLWJsb2NrLWNsaXAge1xuICByaWdodDogMDtcbiAgdHJhbnNmb3JtOiBza2V3KDApO1xuICBib3R0b206IDA7XG4gIGhlaWdodDogNDBweDtcbiAgY2xpcC1wYXRoOiBwb2x5Z29uKDE1JSAwLCAxMDAlIDAsIDEwMCUgMTAwJSwgMCUgMTAwJSk7XG59XG5cbi5saW5lIHtcbiAgZGlzcGxheTogZmxleDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAyMHB4O1xufVxuLmxpbmUtYmxvY2sge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogMTAwJTtcbn1cbi5saW5lLWJsb2NrLS1vbmUge1xuICB3aWR0aDogMjAlO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2U0ZTRlNDtcbiAgYm9yZGVyLXJpZ2h0OiAzcHggc29saWQgI2U0ZTRlNDtcbiAgdHJhbnNmb3JtOiBza2V3KC00NWRlZyk7XG59XG4ubGluZS1ibG9jay0tdHdvIHtcbiAgd2lkdGg6IGNhbGMoODAlIC0gOHB4KTtcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICNlNGU0ZTQ7XG4gIHJpZ2h0OiAwO1xufVxuXG4ubGluZS1zdmcge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAudGl0bGUtdHdvIHtcbiAgICBmb250LXNpemU6IDMuNXJlbTtcbiAgfVxuICAudGl0bGUtZm91ciB7XG4gICAgZm9udC1zaXplOiAyLjVyZW07XG4gIH1cbiAgLnRleHQge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxuICAuYnRuIHtcbiAgICB3aWR0aDogMzAwcHg7XG4gICAgcGFkZGluZzogMCAyZW07XG4gIH1cbiAgLndoaXRlLWJsb2NrLWxlZnQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLnNlY3Rpb24ge1xuICAgIHBhZGRpbmc6IDZlbSAwO1xuICB9XG4gIC50aXRsZS10d28ge1xuICAgIGZvbnQtc2l6ZTogNC41cmVtO1xuICB9XG4gIC50aXRsZS10aHJlZSB7XG4gICAgZm9udC1zaXplOiAyLjJyZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmxpbmUtc3ZnIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuLm5hdmJhciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgcGFkZGluZzogMDtcbn1cbi5uYXZiYXItYnJhbmQge1xuICB6LWluZGV4OiAxMDtcbiAgbWFyZ2luOiAwO1xufVxuLm5hdmJhci1icmFuZCBpbWcge1xuICBoZWlnaHQ6IDgwcHg7XG59XG4ubmF2YmFyIC5uYXYtbGluayB7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbn1cbi5uYXZiYXIgYSB7XG4gIGNvbG9yOiAjMDAwMDAwO1xufVxuLm5hdmJhciAuZHJvcGRvd24taXRlbSB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xufVxuXG4ubmF2YmFyLXRvZ2dsZXIge1xuICBwYWRkaW5nOiAyZW0gMWVtO1xuICBtYXJnaW4tcmlnaHQ6IDFlbTtcbn1cblxuLmNvbnRhaW5lci1mbHVpZCB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuLmNvbGxhcHNlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbn1cblxuLm5hdi1pdGVtIHtcbiAgcGFkZGluZy1sZWZ0OiAxZW07XG59XG5cbi5kcm9wZG93bi1tZW51IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm9yZGVyOiBub25lO1xufVxuXG4uZmxhZyB7XG4gIGhlaWdodDogMjVweDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5jb250YWluZXItZmx1aWQge1xuICAgIHdpZHRoOiA4MCU7XG4gICAgbWF4LXdpZHRoOiAxMzAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbiAgLm5hdi1pdGVtIHtcbiAgICBtYXJnaW46IDAgMXJlbTtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG4gIC5uYXYtbGluayB7XG4gICAgcGFkZGluZzogMWVtO1xuICB9XG4gIC5kcm9wZG93bi1tZW51IHtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbiAgLmRyb3Bkb3duLWl0ZW0ge1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAubmF2LWl0ZW0ge1xuICAgIG1hcmdpbi1sZWZ0OiAzcmVtO1xuICB9XG59XG4uYWJvdXRfX3dyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uYWJvdXRfX2JveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4uYWJvdXRfX3RpbGUge1xuICBmbGV4OiAxO1xuICBtYXJnaW46IDEuNWVtIDA7XG59XG4uYWJvdXRfX3RpbGUtLW9uZSBpbWcge1xuICB3aWR0aDogMTAwJTtcbn1cbi5hYm91dF9fdGV4dHMge1xuICBtYXJnaW4tdG9wOiAxcmVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi5hYm91dF9fdGV4dHNfX2ZvdXIge1xuICBtYXJnaW46IDAgMC4zZW07XG4gIGxldHRlci1zcGFjaW5nOiAtMXB4O1xufVxuLmFib3V0X19saW5rIHtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbn1cbi5hYm91dF9fbGluayBpbWcge1xuICBoZWlnaHQ6IDI1cHg7XG59XG4uYWJvdXRfX2xpbms6aG92ZXIge1xuICBjb2xvcjogIzAwMDAwMDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5hYm91dF9fYm94IHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgLmFib3V0X190aWxlIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cbiAgLmFib3V0X190aWxlLS1vbmUgaW1nIHtcbiAgICB3aWR0aDogODAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuICAuYWJvdXRfX3RleHRzX19mb3VyIHtcbiAgICBtYXJnaW46IDAgMWVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5hYm91dF9fdGlsZSB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG4gIC5hYm91dF9fdGlsZS0tb25lIGltZyB7XG4gICAgd2lkdGg6IDY1JTtcbiAgfVxufVxuLmFjY29yZGlvbnNfX2JveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4uYWNjb3JkaW9uc19fYnRucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG4uYWNjb3JkaW9uc19fdGlsZSB7XG4gIGZsZXg6IDE7XG4gIG1hcmdpbjogMS41ZW0gMDtcbn1cbi5hY2NvcmRpb25zX190aWxlLS1vbmUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLmFjY29yZGlvbnNfX3RpbGUtYnRuIHtcbiAgZmxleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBoZWlnaHQ6IDUwcHg7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNsaXAtcGF0aDogcG9seWdvbigwIDAsIDEwMCUgMCwgMTAwJSA5MCUsIDc1JSA5MCUsIDY1JSAxMDAlLCAwIDEwMCUpO1xufVxuLmFjY29yZGlvbnNfX3RpbGUtYnRuLS1hY3RpdmUge1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDExNWRlZywgcmdiKDUxLCA0MCwgMTIxKSAwJSwgcmdiKDU1LCAzOSwgMTIxKSA2MCUsIHJnYigxNzMsIDEyLCAxMjIpIDEwMCUpO1xufVxuLmFjY29yZGlvbnNfX3RpbGUtYnRuLS1hY3RpdmU6aG92ZXIge1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDExNWRlZywgcmdiKDUxLCA0MCwgMTIxKSAwJSwgcmdiKDU1LCAzOSwgMTIxKSA0NSUsIHJnYigxNzMsIDEyLCAxMjIpIDc1JSwgcmdiKDE3MywgMTIsIDEyMikgMTAwJSk7XG59XG4uYWNjb3JkaW9uc19fdGlsZS0tdHdvIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmFjY29yZGlvbnNfX3RpbGUtLXR3byBpbWcge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmFjY29yZGlvbiB7XG4gIG1hcmdpbi10b3A6IDVyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4uYWNjb3JkaW9uX190aWxlIHtcbiAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjZTRlNGU0O1xuICBwYWRkaW5nLWxlZnQ6IDFlbTtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICB0cmFuc2l0aW9uOiBib3JkZXItbGVmdCAwLjVzIGVhc2U7XG59XG4uYWNjb3JkaW9uX19idG4ge1xuICBmb250LXNpemU6IDEuOXJlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiAjN2Y3ZjdmO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuNXMgZWFzZTtcbn1cbi5hY2NvcmRpb25fX2luZm8ge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXgtaGVpZ2h0OiAwcHg7XG4gIHRyYW5zaXRpb246IG1heC1oZWlnaHQgMC41cyBlYXNlO1xufVxuLmFjY29yZGlvbl9faW5mby10ZXh0IHtcbiAgZm9udC1zaXplOiAxLjZyZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuYWNjb3JkaW9uc19fdGlsZS1idG4ge1xuICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmFjY29yZGlvbnNfX2JveCB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxuICAuYWNjb3JkaW9uc19fdGlsZS0tdHdvIGltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxuICAuYWNjb3JkaW9uX19idG4ge1xuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICB9XG59XG4uYWN0aXZlIHtcbiAgbWF4LWhlaWdodDogMjAwcHg7XG59XG5cbi5hY3RpdmUtdHdvIHtcbiAgY29sb3I6ICMwMDAwMDA7XG59XG5cbi5hY3RpdmUtdGhyZWUge1xuICBib3JkZXItbGVmdDogM3B4IHNvbGlkICMwMDAwMDA7XG59XG5cbi5mb290ZXJfX3RvcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDExNWRlZywgcmdiKDUxLCA0MCwgMTIxKSAwJSwgcmdiKDU1LCAzOSwgMTIxKSA0NSUsIHJnYigxNzMsIDEyLCAxMjIpIDc1JSwgcmdiKDE3MywgMTIsIDEyMikgMTAwJSk7XG59XG4uZm9vdGVyX190b3AtLXdyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLmZvb3Rlcl9fdG9wLWxlZnQge1xuICBtYXJnaW46IDNlbSAwO1xufVxuLmZvb3Rlcl9fdG9wLWxlZnQgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4uZm9vdGVyX190b3AtcmlnaHQge1xuICBtYXJnaW4tYm90dG9tOiAzZW07XG59XG4uZm9vdGVyX19ib3R0b20ge1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbn1cbi5mb290ZXJfX2JvdHRvbS0td3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4uZm9vdGVyX19ib3R0b20tbGVmdCBhIGltZyB7XG4gIGhlaWdodDogOTBweDtcbn1cbi5mb290ZXJfX2JvdHRvbS10aWxlLS1vbmUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBtYXJnaW46IDFlbSAwO1xufVxuLmZvb3Rlcl9fYm90dG9tLXRpbGUtLW9uZSBhIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBwYWRkaW5nOiAwLjZlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcbiAgbWFyZ2luOiAwIDAuM2VtO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlO1xufVxuLmZvb3Rlcl9fYm90dG9tLXRpbGUtLW9uZSBhOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG4uZm9vdGVyX19ib3R0b20tdGlsZS0tb25lIGEgaW1nIHtcbiAgaGVpZ2h0OiAyMHB4O1xuICB3aWR0aDogMjBweDtcbn1cbi5mb290ZXJfX2JvdHRvbS10aWxlLS1vbmUgYTpob3ZlciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcbn1cbi5mb290ZXJfX2JvdHRvbS10aWxlLS1uYXYgYSwgLmZvb3Rlcl9fYm90dG9tLXRpbGUtLXR3byBhIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uZm9vdGVyX19ib3R0b20tdGlsZS0tbmF2IGE6aG92ZXIsIC5mb290ZXJfX2JvdHRvbS10aWxlLS10d28gYTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICBjb2xvcjogIzAwMDAwMDtcbn1cbi5mb290ZXJfX2JvdHRvbS10aWxlLS1uYXYgdWwsIC5mb290ZXJfX2JvdHRvbS10aWxlLS10d28gdWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG4uZm9vdGVyX19ib3R0b20tdGlsZS0tbmF2IHVsIGxpIGEsIC5mb290ZXJfX2JvdHRvbS10aWxlLS10d28gdWwgbGkgYSB7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuLmZvb3Rlcl9fYmFyIHtcbiAgbWFyZ2luOiAwLjVlbSAwIDEuNWVtIDA7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmZvb3Rlcl9fdG9wLS13cmFwcGVyIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB9XG4gIC5mb290ZXJfX3RvcC1sZWZ0IHtcbiAgICBtYXJnaW46IDA7XG4gIH1cbiAgLmZvb3Rlcl9fdG9wLWxlZnQgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW46IC0zZW0gMCAzZW0gMDtcbiAgfVxuICAuZm9vdGVyX190b3AtcmlnaHQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW46IDAgMCAwIDJlbTtcbiAgfVxuICAuZm9vdGVyX19ib3R0b20tbWlkIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgfVxuICAuZm9vdGVyX19ib3R0b20tdGlsZS0tbmF2IHtcbiAgICBmbGV4OiAxO1xuICAgIG1hcmdpbjogMWVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmZvb3Rlcl9fdG9wLWxlZnQge1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIGZsZXg6IDI7XG4gIH1cbiAgLmZvb3Rlcl9fdG9wLWxlZnQgaW1nIHtcbiAgICB3aWR0aDogNzAlO1xuICB9XG4gIC5mb290ZXJfX3RvcC1yaWdodCB7XG4gICAgZmxleDogMztcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuZm9vdGVyX19ib3R0b20tbGVmdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgfVxuICAuZm9vdGVyX19ib3R0b20tLXdyYXBwZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbiAgLmZvb3Rlcl9fYm90dG9tLW1pZCB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAgIGdhcDogMXJlbSA1cmVtO1xuICAgIG1hcmdpbjogMCAxMHJlbSAwIDE1cmVtO1xuICB9XG59XG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDYyLjUlO1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbn1cblxuYm9keSB7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBmb250LWZhbWlseTogXCJQb3BwaW5zXCIsIHNhbnMtc2VyaWY7XG59XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM1Mjg3OTtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG5cbi5saW5lLXN2Zy0tb25lIHtcbiAgcmlnaHQ6IC0xMCU7XG4gIHRvcDogMjAlO1xuICB3aWR0aDogMzUlO1xufVxuLmxpbmUtc3ZnLS10d28ge1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogNTAlO1xuICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cbi5saW5lLXN2Zy0tdGhyZWUge1xuICBsZWZ0OiAwO1xuICBib3R0b206IDEwJTtcbiAgdHJhbnNmb3JtOiByb3RhdGVaKDE4MGRlZyk7XG59XG4ubGluZS1zdmctLWZpdmUge1xuICBsZWZ0OiAtMTAlO1xuICB3aWR0aDogMzAlO1xuICBib3R0b206IDE1JTtcbiAgdHJhbnNmb3JtOiByb3RhdGVaKDE4MGRlZyk7XG59XG4ubGluZS1zdmctLXNpeCB7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDI1JTtcbiAgd2lkdGg6IDQwJTtcbiAgdHJhbnNmb3JtOiByb3RhdGVaKDE4MGRlZyk7XG4gIHotaW5kZXg6IC0xO1xufVxuLmxpbmUtc3ZnLS1zZXZlbiB7XG4gIGJvdHRvbTogMTAlO1xuICBsZWZ0OiAtMjAlO1xuICB3aWR0aDogODAlO1xuICB6LWluZGV4OiAtMTtcbn1cblxuLnNoYWRvdy1iZyB7XG4gIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4wOSkgMHB4IDJweCAxcHgsIHJnYmEoMCwgMCwgMCwgMC4wOSkgMHB4IDRweCAycHgsIHJnYmEoMCwgMCwgMCwgMC4wOSkgMHB4IDhweCA0cHgsIHJnYmEoMCwgMCwgMCwgMC4wOSkgMHB4IDE2cHggOHB4LCByZ2JhKDAsIDAsIDAsIDAuMDkpIDBweCAzMnB4IDE2cHg7XG59XG5cbi5zcGluZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIHotaW5kZXg6IDEwMDtcbiAgdHJhbnNpdGlvbjogMC4zcyBvcGFjaXR5IGVhc2U7XG59XG4uc3BpbmVyX19pbWcge1xuICBoZWlnaHQ6IDIwMHB4O1xuICBhbmltYXRpb246IHJvdGF0ZUFuaW1hdGlvbiAxcyBsaW5lYXIgMTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbn1cbi5zcGluZXJfX3RleHQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBmb250LXNpemU6IDRyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGNvbG9yOiAjZTMwMDdhO1xufVxuXG5Aa2V5ZnJhbWVzIHJvdGF0ZUFuaW1hdGlvbiB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoMCk7XG4gIH1cbiAgMjUlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoNjBkZWcpO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGVZKDM2MGRlZyk7XG4gIH1cbiAgNzUlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoNjBkZWcpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlWSgzNjBkZWcpO1xuICB9XG59XG4uY29va2llIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHBhZGRpbmc6IDFlbTtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICM3NjJjNmUsICMzNTI5N2EpO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjZTMwMTdhIDQyLjcxJSwgIzdkMmM2Zik7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICM3NjJjNmUsICMzNTI5N2EpO1xuICB6LWluZGV4OiA5OTtcbn1cbi5jb29raWUtaW1nIHtcbiAgaGVpZ2h0OiA2MHB4O1xufVxuLmNvb2tpZS1oZWFkaW5nIHtcbiAgZm9udC1zaXplOiA2cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cbi5jb29raWUtdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuLmNvb2tpZV9fYm94IHtcbiAgZGlzcGxheTogZmxleDtcbn1cbi5jb29raWVfX2JveC1saW5rIHtcbiAgbWFyZ2luOiAwIDAuM2VtO1xuICBwYWRkaW5nOiAwLjVlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgY29sb3I6ICMzNTI4Nzk7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNmZmZmZmY7XG4gIHRyYW5zaXRpb246IDAuM3MgYmFja2dyb3VuZC1jb2xvciBlYXNlLCAwLjNzIGNvbG9yIGVhc2U7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xufVxuLmNvb2tpZV9fYm94LWxpbms6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG5cbi5oaWRkZW4tY29va2llcyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuY29va2llIHtcbiAgICBwYWRkaW5nOiAyZW07XG4gICAgbWF4LXdpZHRoOiA0MjBweDtcbiAgfVxufVxuLmhlYWRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiBjYWxjKDk4dmggLSA4NXB4KTtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9pbWduYy9oZWFkZXItc21hbGwuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG59XG4uaGVhZGVyX193cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBoZWlnaHQ6IDEwMCU7XG59XG4uaGVhZGVyX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMy40cmVtO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5kaXYtbWFyZ2luIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogODVweDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5oZWFkZXJfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDZyZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAuaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvaW1nbmMvaGVhZGVyLWJpZy5qcGdcIik7XG4gIH1cbiAgLmhlYWRlcl9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogOHJlbTtcbiAgfVxufVxuLmJhciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNDUwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmV5O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uYmFyX193cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG4uYmFyX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG4uYmFyX190ZXh0IHtcbiAgbWFyZ2luLXRvcDogMC41ZW07XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBmb250LXNpemU6IDJyZW07XG59XG4uYmFyIGEge1xuICBtYXJnaW4tdG9wOiAycmVtO1xuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbn1cbi5iYXIgYSBpbWcge1xuICBoZWlnaHQ6IDMwcHg7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmJhciB7XG4gICAgaGVpZ2h0OiA2MDBweDtcbiAgfVxuICAuYmFyX190aXRsZSB7XG4gICAgZm9udC1zaXplOiA1cmVtO1xuICB9XG59XG4ub2ZmZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4ub2ZmZXItdGl0bGUge1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgZm9udC1zaXplOiAycmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5vZmZlcl9fYm94IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbi5vZmZlci1pbWcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDYwdmg7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciB0b3A7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4ub2ZmZXItaW1nLS1vbmUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvb2ZmZXIxLmpwZ1wiKTtcbn1cbi5vZmZlci1pbWctLXR3byB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9vZmZlcjIuanBnXCIpO1xufVxuLm9mZmVyLWltZy0tdGhyZWUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvb2ZmZXIzLmpwZ1wiKTtcbn1cbi5vZmZlcl9fbGVmdCB7XG4gIG1hcmdpbi1ib3R0b206IDNlbTtcbn1cbi5vZmZlcl9fbGVmdC1ibG9jayB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4ub2ZmZXJfX2xlZnQtaW1nOmhvdmVyIC5vZmZlcl9fbGVmdC1ob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG4ub2ZmZXJfX2xlZnQtaG92ZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAwLjVlbTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XG4gIG9wYWNpdHk6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cbi5vZmZlcl9fcmlnaHQtdGlsZS0tb25lIHtcbiAgbWFyZ2luLWJvdHRvbTogM2VtO1xufVxuLm9mZmVyX19yaWdodC1pbWc6aG92ZXIgLm9mZmVyX19yaWdodC1ob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG4ub2ZmZXJfX3JpZ2h0LWhvdmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZzogMC41ZW07XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xuICBvcGFjaXR5OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAzNzBweCkge1xuICAub2ZmZXJfX2xlZnQtaG92ZXIge1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgfVxuICAub2ZmZXJfX3JpZ2h0LWhvdmVyIHtcbiAgICBwYWRkaW5nOiAxZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAub2ZmZXJfX2xlZnQtaG92ZXIge1xuICAgIHBhZGRpbmc6IDJlbTtcbiAgfVxuICAub2ZmZXJfX3JpZ2h0LWhvdmVyIHtcbiAgICBwYWRkaW5nOiAyZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAub2ZmZXJfX2JveCB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxuICAub2ZmZXJfX2xlZnQge1xuICAgIGZsZXg6IDI7XG4gICAgbWFyZ2luOiAwO1xuICB9XG4gIC5vZmZlcl9fbGVmdC1pbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNzUlO1xuICB9XG4gIC5vZmZlcl9fbGVmdC1ibG9jayB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiA0MCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgYm90dG9tOiAwO1xuICAgIHJpZ2h0OiAtNTBweDtcbiAgICB0cmFuc2Zvcm06IHNrZXcoLTQ1ZGVnKTtcbiAgfVxuICAub2ZmZXJfX3JpZ2h0IHtcbiAgICBmbGV4OiAxO1xuICAgIG1hcmdpbi1sZWZ0OiA1ZW07XG4gIH1cbiAgLm9mZmVyX19yaWdodC1pbWcge1xuICAgIHdpZHRoOiAzMzBweDtcbiAgICBoZWlnaHQ6IDQyMHB4O1xuICB9XG4gIC5vZmZlcl9fcmlnaHQtdGlsZS0tb25lIHtcbiAgICBtYXJnaW4tYm90dG9tOiA1ZW07XG4gIH1cbiAgLm9mZmVyX19yaWdodC1ob3ZlciB7XG4gICAgcGFkZGluZzogMWVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5vZmZlcl9fbGVmdCB7XG4gICAgZmxleDogMTtcbiAgfVxuICAub2ZmZXJfX2xlZnQtaG92ZXIge1xuICAgIHBhZGRpbmc6IDRlbTtcbiAgfVxuICAub2ZmZXJfX3JpZ2h0IHtcbiAgICBmbGV4OiAxO1xuICAgIG1hcmdpbi1sZWZ0OiAxMHJlbTtcbiAgfVxuICAub2ZmZXJfX3JpZ2h0LWltZyB7XG4gICAgd2lkdGg6IDM1MHB4O1xuICB9XG59XG4ubmV3c19fYm94IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbi5uZXdzX190aWxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXg6IDE7XG4gIG1hcmdpbjogMmVtIDA7XG59XG4ubmV3c19fdGlsZS1sZWZ0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBoZWlnaHQ6IDEzMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xufVxuLm5ld3NfX3RpbGUtbGVmdC0tb25lIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL25ld3MxLmpwZ1wiKTtcbn1cbi5uZXdzX190aWxlLWxlZnQtLXR3byB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9uZXdzMS5qcGdcIik7XG59XG4ubmV3c19fdGlsZS1yaWdodCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IDJlbTtcbn1cbi5uZXdzX190aWxlIC5kYXRlIHtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGNvbG9yOiAjN2Y3ZjdmO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5uZXdzX19ib3gge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbiAgLm5ld3NfX3RpbGUge1xuICAgIG1hcmdpbjogMCAyZW0gMCAwO1xuICB9XG59XG4uZnV0dXJlX193cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbi5mdXR1cmVfX2xlZnQge1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG4uZnV0dXJlX19yaWdodCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiA1MHZoO1xufVxuLmZ1dHVyZV9fcmlnaHQgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG4uZnV0dXJlX19yaWdodCAubGluZS1zdmctLWVpZ2h0IHtcbiAgYm90dG9tOiAxMCU7XG4gIGxlZnQ6IC0xMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIHRyYW5zZm9ybTogcm90YXRlWigxODBkZWcpO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmZ1dHVyZV9fd3JhcHBlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB9XG4gIC5mdXR1cmVfX2xlZnQge1xuICAgIGZsZXg6IDM7XG4gICAgbWFyZ2luOiAwIDhlbSAwIDA7XG4gIH1cbiAgLmZ1dHVyZV9fcmlnaHQge1xuICAgIGZsZXg6IDI7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5mdXR1cmVfX2xlZnQge1xuICAgIGZsZXg6IDE7XG4gICAgbWFyZ2luOiAwIDE1ZW0gMCAwO1xuICB9XG4gIC5mdXR1cmVfX3JpZ2h0IHtcbiAgICBmbGV4OiAxO1xuICB9XG59IiwiJHdoaXRlOiAjZmZmZmZmO1xyXG4kYmxhY2s6ICMwMDAwMDA7XHJcbiRwaW5rOiAjZTMwMDdhO1xyXG4kcHVycGxlOiAjMzUyODc5O1xyXG4kZ3JleTogI2U0ZTRlNDtcclxuJGdyZXktdHdvOiAjN2Y3ZjdmO1xyXG4iLCIubmF2YmFyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgICB0b3A6IDA7XHJcbiAgICB6LWluZGV4OiAxMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcblxyXG4gICAgJi1icmFuZCB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgei1pbmRleDogMTA7XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiA4MHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgfVxyXG5cclxuICAgIC5uYXYtbGluayB7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgfVxyXG4gICAgYSB7XHJcbiAgICAgICAgY29sb3I6ICRibGFjaztcclxuICAgIH1cclxuICAgIC5kcm9wZG93bi1pdGVtIHtcclxuICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgIH1cclxufVxyXG5cclxuLm5hdmJhci10b2dnbGVyIHtcclxuICAgIHBhZGRpbmc6IDJlbSAxZW07XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcclxufVxyXG5cclxuLmNvbnRhaW5lci1mbHVpZCB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4uY29sbGFwc2Uge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG59XHJcblxyXG4ubmF2LWl0ZW0ge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxZW07XHJcbn1cclxuXHJcbi5kcm9wZG93bi1tZW51IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxufVxyXG5cclxuLmZsYWcge1xyXG4gICAgaGVpZ2h0OiAyNXB4O1xyXG59XHJcblxyXG5cclxuLy8gU21hbGwgZGV2aWNlcyAobGFuZHNjYXBlIHBob25lcywgNTc2cHggYW5kIHVwKVxyXG4vLyBAbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHsgLi4uIH1cclxuXHJcbi8vIE1lZGl1bSBkZXZpY2VzICh0YWJsZXRzLCA3NjhweCBhbmQgdXApXHJcbi8vIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4vLyAgICAgLm5hdmJhciB7XHJcbi8vICAgICAgICAgJi1icmFuZCB7XHJcbi8vICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuLy8gICAgICAgICAgICAgYm90dG9tOiAtMjBweDtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9XHJcbi8vIH1cclxuXHJcbi8vIExhcmdlIGRldmljZXMgKGRlc2t0b3BzLCA5OTJweCBhbmQgdXApXHJcbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xyXG5cclxuICAgIC5jb250YWluZXItZmx1aWQge1xyXG4gICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMzAwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgLm5hdi1pdGVtICB7XHJcbiAgICAgICAgbWFyZ2luOjAgMXJlbTtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgfVxyXG5cclxuICAgIC5uYXYtbGluayB7XHJcbiAgICAgICAgcGFkZGluZzogMWVtO1xyXG4gICAgfVxyXG5cclxuICAgIC5kcm9wZG93bi1tZW51IHtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgLmRyb3Bkb3duLWl0ZW0ge1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbTtcclxuICAgIH1cclxufVxyXG5cclxuLy8gRXh0cmEgbGFyZ2UgZGV2aWNlcyAobGFyZ2UgZGVza3RvcHMsIDEyMDBweCBhbmQgdXApXHJcbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcclxuICAgIC5uYXYtaXRlbSB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDNyZW07XHJcbiAgICB9ICAgIFxyXG59XHJcblxyXG4iLCIuYWJvdXQge1xyXG4gICAgJl9fd3JhcHBlciB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG4gICAgJl9fYm94IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB9XHJcbiAgIFxyXG4gICAgJl9fdGlsZSB7XHJcbiAgICAgICAgZmxleDogMTtcclxuICAgICAgICBtYXJnaW46IDEuNWVtIDA7XHJcbiAgICAgICAgJi0tb25lIHtcclxuICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX3RleHRzIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgJl9fZm91ciB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMCAuM2VtO1xyXG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogLTFweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fbGluayB7XHJcbiAgICAgICAgY29sb3I6ICRibGFjaztcclxuICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6ICRibGFjaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4vLyBTbWFsbCBkZXZpY2VzIChsYW5kc2NhcGUgcGhvbmVzLCA1NzZweCBhbmQgdXApXHJcbi8vIEBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkgeyAuLi4gfVxyXG5cclxuLy8gTWVkaXVtIGRldmljZXMgKHRhYmxldHMsIDc2OHB4IGFuZCB1cClcclxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcbiAgICAuYWJvdXQge1xyXG4gICAgICAgICZfX2JveCB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICZfX3RpbGUge1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgICYtLW9uZSB7XHJcbiAgICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190ZXh0cyB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAmX19mb3VyIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMCAxZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIExhcmdlIGRldmljZXMgKGRlc2t0b3BzLCA5OTJweCBhbmQgdXApXHJcbi8vIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkgeyAuLi4gfVxyXG5cclxuLy8gRXh0cmEgbGFyZ2UgZGV2aWNlcyAobGFyZ2UgZGVza3RvcHMsIDEyMDBweCBhbmQgdXApXHJcbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcclxuICAgIC5hYm91dHtcclxuICAgICAgICAmX190aWxlIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAmLS1vbmUge1xyXG4gICAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogNjUlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmFjY29yZGlvbnN7XHJcbiAgICAmX19ib3gge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIH1cclxuXHJcbiAgICAmX19idG5zIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190aWxlIHtcclxuICAgICAgICBmbGV4OiAxO1xyXG4gICAgICAgIG1hcmdpbjogMS41ZW0gMDtcclxuICAgICAgICBcclxuICAgICAgICAmLS1vbmUge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi1idG4ge1xyXG4gICAgICAgICAgICBmbGV4OiAxO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgY29sb3I6ICRibGFjaztcclxuICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNHJlbTtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgICAgICBjbGlwLXBhdGg6IHBvbHlnb24oMCAwLCAxMDAlIDAsIDEwMCUgOTAlLCA3NSUgOTAlLCA2NSUgMTAwJSwgMCAxMDAlKTtcclxuICAgICAgICAgICAgJi0tYWN0aXZlIHtcclxuICAgICAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMTVkZWcsIHJnYmEoNTEsIDQwLCAxMjEsIDEpIDAlLCByZ2JhKDU1LCAzOSwgMTIxLCAxKSA2MCUsIHJnYmEoMTczLCAxMiwgMTIyLCAxKSAxMDAlKTtcclxuICAgICAgICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMTVkZWcsIHJnYmEoNTEsIDQwLCAxMjEsIDEpIDAlLCByZ2JhKDU1LCAzOSwgMTIxLCAxKSA0NSUsIHJnYmEoMTczLCAxMiwgMTIyLCAxKSA3NSUsIHJnYmEoMTczLCAxMiwgMTIyLCAxKSAxMDAlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmLS10d28ge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmFjY29yZGlvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiA1cmVtO1xyXG4gICAgXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIFxyXG4gICAgJl9fdGlsZSB7XHJcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCAkZ3JleTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDFlbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYm9yZGVyLWxlZnQgLjVzIGVhc2U7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2J0biB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjlyZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgY29sb3I6ICRncmV5LXR3bztcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgLjVzIGVhc2U7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vICZfX2xlZnQge1xyXG4gICAgICAgIFxyXG4gICAgLy8gICAgIG1hcmdpbi1yaWdodDogMXJlbTtcclxuICAgIC8vICAgICAmLWJhciB7XHJcbiAgICAgICAgLy8gICAgICAgICB3aWR0aDogMnB4O1xyXG4gICAgICAgIC8vICAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgLy8gICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JleS10d287XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gfSAgICBcclxuICAgIFxyXG4gICAgJl9faW5mbyB7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBtYXgtaGVpZ2h0OiAwcHg7XHJcblxyXG4gICAgICAgIHRyYW5zaXRpb246IG1heC1oZWlnaHQgLjVzIGVhc2U7XHJcblxyXG4gICAgICAgICYtdGV4dCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy8gU21hbGwgZGV2aWNlcyAobGFuZHNjYXBlIHBob25lcywgNTc2cHggYW5kIHVwKVxyXG4vLyBAbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHsgLi4uIH1cclxuXHJcbi8vIE1lZGl1bSBkZXZpY2VzICh0YWJsZXRzLCA3NjhweCBhbmQgdXApXHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gICAgLmFjY29yZGlvbnMge1xyXG4gICAgICAgICZfX3RpbGUge1xyXG4gICAgICAgICAgICAmLWJ0biB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuOHJlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy8gTGFyZ2UgZGV2aWNlcyAoZGVza3RvcHMsIDk5MnB4IGFuZCB1cClcclxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XHJcbiAgICAuYWNjb3JkaW9ucyB7XHJcbiAgICAgICAgJl9fYm94IHtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJl9fdGlsZSB7XHJcbiAgICAgICAgICAgICYtLXR3byB7XHJcbiAgICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5hY2NvcmRpb24ge1xyXG4gICAgICAgICZfX2J0biB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMi41cmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy8gRXh0cmEgbGFyZ2UgZGV2aWNlcyAobGFyZ2UgZGVza3RvcHMsIDEyMDBweCBhbmQgdXApXHJcbi8vIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHsgLi4uIH1cclxuXHJcblxyXG4uYWN0aXZle1xyXG4gICAgbWF4LWhlaWdodDogMjAwcHg7XHJcbn1cclxuXHJcbi5hY3RpdmUtdHdvIHtcclxuICAgIGNvbG9yOiAkYmxhY2s7XHJcbn1cclxuXHJcbi5hY3RpdmUtdGhyZWUge1xyXG4gICAgYm9yZGVyLWxlZnQgOiAzcHggc29saWQgJGJsYWNrO1xyXG59IiwiLmZvb3RlciB7XHJcbiAgICAmX190b3Age1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTE1ZGVnLCByZ2JhKDUxLCA0MCwgMTIxLCAxKSAwJSwgcmdiYSg1NSwgMzksIDEyMSwgMSkgNDUlLCByZ2JhKDE3MywgMTIsIDEyMiwgMSkgNzUlLCByZ2JhKDE3MywgMTIsIDEyMiwgMSkgMTAwJSk7XHJcbiAgICAgICAgLy8gb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICAgICAgJi0td3JhcHBlciB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLWxlZnQge1xyXG4gICAgICAgICAgIG1hcmdpbjogM2VtIDA7XHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtcmlnaHQge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzZW0gO1xyXG4gICAgICAgICAgICAvLyAgaW1nIHtcclxuICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAvLyAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2JvdHRvbSB7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDA7XHJcblxyXG4gICAgICAgICYtLXdyYXBwZXIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi1sZWZ0IHtcclxuICAgICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogOTBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi10aWxlIHtcclxuICAgICAgICAgICAgJi0tb25lIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAxZW0gMDtcclxuXHJcbiAgICAgICAgICAgICAgICBhIHtcclxuICAgICAgICAgICAgICAgICAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogLjZlbTtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkYmxhY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIC4zZW07XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMjBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmLS1uYXYsXHJcbiAgICAgICAgICAgICYtLXR3byB7XHJcblxyXG4gICAgICAgICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRibGFjaztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgdWwge1xyXG4gICAgICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRibGFjaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYmFyIHtcclxuICAgICAgICBtYXJnaW46IC41ZW0gMCAxLjVlbSAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLy8gTWVkaXVtIGRldmljZXMgKHRhYmxldHMsIDc2OHB4IGFuZCB1cClcclxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcbiAgICAuZm9vdGVyIHtcclxuICAgICAgICAmX190b3Age1xyXG4gICAgXHJcbiAgICAgICAgICAgICYtLXdyYXBwZXIge1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAmLWxlZnQge1xyXG4gICAgICAgICAgICAgICAgLy8gcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgLy8gbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICAgICAgICAgIC8vIHRvcDogMDtcclxuXHJcbiAgICAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogLTNlbSAwIDNlbSAwO1xyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAmLXJpZ2h0IHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAvLyBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgMCAwIDJlbTtcclxuICAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgJl9fYm90dG9tIHtcclxuXHJcbiAgICAgICAgICAgICYtbWlkIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYtdGlsZSB7XHJcbiAgICAgICAgICAgICAgICAmLS1uYXYge1xyXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAxZW07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xyXG4gICAgLmZvb3RlciB7XHJcbiAgICAgICAgJl9fdG9wIHtcclxuICAgICAgICAgICAgLy8gb3ZlcmZsb3cteTogdmlzaWJsZTtcclxuICAgICAgICAgICAgLy8gb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gICAgICAgICAgICAmLWxlZnQge1xyXG4gICAgICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgICAgICAgICAgICAgIGZsZXg6IDI7XHJcbiAgICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgIHdpZHRoOjcwJTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmLXJpZ2h0IHtcclxuICAgICAgICAgICAgICAgIGZsZXg6IDM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IFxyXG4gICAgfVxyXG59XHJcblxyXG4vLyBFeHRyYSBsYXJnZSBkZXZpY2VzIChsYXJnZSBkZXNrdG9wcywgMTIwMHB4IGFuZCB1cClcclxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xyXG4gICAgLmZvb3RlciB7XHJcbiAgICAgICAgJl9fYm90dG9tIHtcclxuICAgICAgICAgICAgJi1sZWZ0IHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmLS13cmFwcGVyIHtcclxuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYtbWlkIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xyXG4gICAgICAgICAgICAgICAgZ2FwOiAxcmVtIDVyZW07XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgMTByZW0gMCAxNXJlbTtcclxuICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiQGltcG9ydCAnY29sb3JzJywgJ2NvbXBvbmVudHMnLCAnbmF2JywgJ2Fib3V0JywgJ2FjY29yZGlvbicsICdmb290ZXInO1xyXG5cclxuLy8gR0VORVJBTCBTVEFSVFxyXG4qLFxyXG4qOjpiZWZvcmUsXHJcbio6OmFmdGVyIHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5odG1sIHtcclxuICAgIGZvbnQtc2l6ZTogNjIuNSU7XHJcbiAgICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgICBmb250LXNpemU6IDEuOHJlbTtcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuICAgIGNvbG9yOiAkYmxhY2s7XHJcbiAgICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG46OnNlbGVjdGlvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHVycGxlO1xyXG4gICAgY29sb3I6ICR3aGl0ZTtcclxufVxyXG5cclxuXHJcbi8vIDo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4vLyAgICAgd2lkdGg6IDE1cHg7XHJcbi8vIH1cclxuXHJcbi8vIC8qIFRyYWNrICovXHJcbi8vIDo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xyXG4vLyAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbi8vIH1cclxuXHJcbi8vIC8qIEhhbmRsZSAqL1xyXG4vLyA6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcclxuLy8gICAgIGhlaWdodDogMjAwcHg7XHJcbi8vICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDUxLCA0MCwgMTIxLCAxKSAwJSwgcmdiYSg1NSwgMzksIDEyMSwgMSkgNjAlLCByZ2JhKDE3MywgMTIsIDEyMiwgMSkgMTAwJSk7XHJcbi8vIH1cclxuXHJcbi8vIC8qIEhhbmRsZSBvbiBob3ZlciAqL1xyXG4vLyA6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVyIHtcclxuLy8gICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsIHJnYmEoNTEsIDQwLCAxMjEsIDEpIDAlLCByZ2JhKDU1LCAzOSwgMTIxLCAxKSA0NSUsIHJnYmEoMTczLCAxMiwgMTIyLCAxKSA3NSUsIHJnYmEoMTczLCAxMiwgMTIyLCAxKSAxMDAlKTtcclxuLy8gfVxyXG5cclxuLy8gTElORVMgU1ZHXHJcblxyXG4ubGluZS1zdmcge1xyXG4gICAgJi0tb25lIHtcclxuICAgICAgICByaWdodDogLTEwJTtcclxuICAgICAgICB0b3A6IDIwJTtcclxuICAgICAgICB3aWR0aDogMzUlO1xyXG4gICAgfVxyXG5cclxuICAgICYtLXR3byB7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tdGhyZWUge1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgYm90dG9tOiAxMCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVaKDE4MGRlZyk7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tZml2ZSB7XHJcbiAgICAgICAgbGVmdDogLTEwJTtcclxuICAgICAgICB3aWR0aDogMzAlO1xyXG4gICAgICAgIGJvdHRvbTogMTUlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlWigxODBkZWcpO1xyXG4gICAgfVxyXG5cclxuICAgICYtLXNpeCB7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgdG9wOiAyNSU7XHJcbiAgICAgICAgd2lkdGg6IDQwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVooMTgwZGVnKTtcclxuICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgIH1cclxuXHJcbiAgICAmLS1zZXZlbiB7XHJcbiAgICAgICAgYm90dG9tOiAxMCU7XHJcbiAgICAgICAgbGVmdDogLTIwJTtcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuXHJcbi5zaGFkb3ctYmcge1xyXG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjA5KSAwcHggMnB4IDFweCwgcmdiYSgwLCAwLCAwLCAwLjA5KSAwcHggNHB4IDJweCwgcmdiYSgwLCAwLCAwLCAwLjA5KSAwcHggOHB4IDRweCwgcmdiYSgwLCAwLCAwLCAwLjA5KSAwcHggMTZweCA4cHgsIHJnYmEoMCwgMCwgMCwgMC4wOSkgMHB4IDMycHggMTZweDtcclxufVxyXG5cclxuLy8gU1BJTkVSXHJcblxyXG4uc3BpbmVyIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG4gICAgei1pbmRleDogMTAwO1xyXG4gICAgdHJhbnNpdGlvbjogLjNzIG9wYWNpdHkgZWFzZTtcclxuXHJcblxyXG4gICAgJl9faW1nIHtcclxuICAgICAgICBoZWlnaHQ6IDIwMHB4O1xyXG4gICAgICAgIGFuaW1hdGlvbjogcm90YXRlQW5pbWF0aW9uIDFzIGxpbmVhciAxO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuICAgIH1cclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgZm9udC1zaXplOiA0cmVtO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICBjb2xvcjogJHBpbms7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgcm90YXRlQW5pbWF0aW9uIHtcclxuICAgIDAlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoMCk7XHJcbiAgICB9XHJcblxyXG4gICAgMjUlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoNjBkZWcpO1xyXG4gICAgfVxyXG5cclxuICAgIDUwJSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVZKDM2MGRlZyk7XHJcbiAgICB9XHJcblxyXG4gICAgNzUlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoNjBkZWcpO1xyXG4gICAgfVxyXG5cclxuICAgIDEwMCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlWSgzNjBkZWcpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBDT09LSUUgQUxFUlRcclxuXHJcbi5jb29raWUge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgcGFkZGluZzogMWVtO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjNzYyYzZlLCAjMzUyOTdhKTtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICNlMzAxN2EgNDIuNzElLCAjN2QyYzZmKTtcclxuXHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjNzYyYzZlLCAjMzUyOTdhKTtcclxuICAgIHotaW5kZXg6IDk5O1xyXG5cclxuICAgICYtaW1nIHtcclxuICAgICAgICBoZWlnaHQ6IDYwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJi1oZWFkaW5nIHtcclxuICAgICAgICBmb250LXNpemU6IDZyZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgfVxyXG5cclxuICAgICYtdGV4dCB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYm94IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICAgICAgICAmLWxpbmsge1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgMC4zZW07XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDAuNWVtO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkcHVycGxlO1xyXG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAkd2hpdGU7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IC4zcyBiYWNrZ3JvdW5kLWNvbG9yIGVhc2UsIC4zcyBjb2xvciBlYXNlO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuOHJlbTtcclxuXHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuLmhpZGRlbi1jb29raWVzIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuXHJcbiAgICAuY29va2llIHtcclxuICAgICAgICBwYWRkaW5nOiAyZW07XHJcbiAgICAgICAgbWF4LXdpZHRoOiA0MjBweDtcclxuICAgIH1cclxufVxyXG5cclxuLy8gLmN1cnNvciB7XHJcbi8vICAgICBkaXNwbGF5OiBub25lO1xyXG4vLyB9XHJcblxyXG4vLyBAbWVkaWEgKG1pbi13aWR0aDogMTQwMHB4KSB7XHJcblxyXG4vLyAgICAgaHRtbCB7XHJcbi8vICAgICAgICAgY3Vyc29yOiBub25lO1xyXG4vLyAgICAgfVxyXG4vLyAgICAgLmN1cnNvciB7XHJcbi8vICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbi8vICAgICAgICAgd2lkdGg6IDJyZW07XHJcbi8vICAgICAgICAgaGVpZ2h0OiAycmVtO1xyXG4vLyAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwaW5rO1xyXG4vLyAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICRwaW5rO1xyXG4vLyAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuLy8gICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbi8vICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbi8vICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbi8vICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcyBlYXNlLCBiYWNrZ3JvdW5kLWNvbG9yIC4zcyBlYXNlO1xyXG4vLyAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDEwMCUgMTAwJTtcclxuLy8gICAgICAgICB6LWluZGV4OiAxMDA7XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgLmxpbmstZ3JvdyB7XHJcbi8vICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcclxuLy8gICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuLy8gICAgIH1cclxuXHJcbi8vICAgICBhIHtcclxuLy8gICAgICAgICBjdXJzb3I6IG5vbmU7XHJcbi8vICAgICB9XHJcbi8vIH1cclxuLy8gSEVBREVSXHJcblxyXG4uaGVhZGVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGhlaWdodDogY2FsYyg5OHZoIC0gODVweCk7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvaW1nbmMvaGVhZGVyLXNtYWxsLmpwZycpO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuXHJcblxyXG4gICAgJl9fd3JhcHBlciB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuXHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAzLjRyZW07XHJcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG59XHJcblxyXG4uZGl2LW1hcmdpbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGhlaWdodDogODVweDtcclxufVxyXG5cclxuLy8gU21hbGwgZGV2aWNlcyAobGFuZHNjYXBlIHBob25lcywgNTc2cHggYW5kIHVwKVxyXG4vLyBAbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHsgLi4uIH1cclxuXHJcbi8vIE1lZGl1bSBkZXZpY2VzICh0YWJsZXRzLCA3NjhweCBhbmQgdXApXHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gICAgLmhlYWRlciB7XHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDZyZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyBMYXJnZSBkZXZpY2VzIChkZXNrdG9wcywgOTkycHggYW5kIHVwKVxyXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcclxuICAgIC5oZWFkZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL2ltZ25jL2hlYWRlci1iaWcuanBnJyk7XHJcblxyXG4gICAgICAgICZfX3RpdGxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiA4cmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy8gRXh0cmEgbGFyZ2UgZGV2aWNlcyAobGFyZ2UgZGVza3RvcHMsIDEyMDBweCBhbmQgdXApXHJcbi8vIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHsgLi4uIH1cclxuXHJcblxyXG4vLyBCQVJcclxuXHJcbi5iYXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDQ1MHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZXk7XHJcbiAgICAvLyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9iYXItc21hbGwuanBnJyk7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICAmX193cmFwcGVyIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGl0bGUge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcclxuICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGV4dCB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogLjVlbTtcclxuICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgYSB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMnJlbTtcclxuICAgICAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuXHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgICAgICAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICAgIC5iYXIge1xyXG4gICAgICAgIGhlaWdodDogNjAwcHg7XHJcblxyXG4gICAgICAgICZfX3RpdGxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiA1cmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy8gQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XHJcbi8vICAgICAuYmFyIHtcclxuLy8gICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy8nKTtcclxuLy8gICAgIH1cclxuLy8gfVxyXG5cclxuXHJcbi8vIE9GRkVSXHJcblxyXG4ub2ZmZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICYtdGl0bGUge1xyXG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2JveCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG5cclxuICAgICYtaW1nIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiA2MHZoO1xyXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHRvcDtcclxuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG5cclxuICAgICAgICAmLS1vbmUge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9vZmZlcjEuanBnJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS10d28ge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9vZmZlcjIuanBnJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS10aHJlZSB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL29mZmVyMy5qcGcnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgICZfX2xlZnQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDNlbTtcclxuXHJcbiAgICAgICAgJi1ibG9jayB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLWltZyB7XHJcbiAgICAgICAgICAgICY6aG92ZXIgLm9mZmVyX19sZWZ0LWhvdmVyIHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtaG92ZXIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgLy8gYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAuNWVtO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyBlYXNlO1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX3JpZ2h0IHtcclxuICAgICAgICAmLXRpbGUge1xyXG4gICAgICAgICAgICAmLS1vbmUge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogM2VtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLWltZyB7XHJcbiAgICAgICAgICAgICY6aG92ZXIgLm9mZmVyX19yaWdodC1ob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLWhvdmVyIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIC8vIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgcGFkZGluZzogLjVlbTtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgZWFzZTtcclxuICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gYSB7XHJcbiAgICAgICAgLy8gICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAvLyB9XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAzNzBweCkge1xyXG4gICAgLm9mZmVyIHtcclxuICAgICAgICAmX19sZWZ0IHtcclxuICAgICAgICAgICAgJi1ob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3JpZ2h0IHtcclxuICAgICAgICAgICAgJi1ob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICAgIC5vZmZlciB7XHJcbiAgICAgICAgJl9fbGVmdCB7XHJcbiAgICAgICAgICAgICYtaG92ZXIge1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19yaWdodCB7XHJcbiAgICAgICAgICAgICYtaG92ZXIge1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyBMYXJnZSBkZXZpY2VzIChkZXNrdG9wcywgOTkycHggYW5kIHVwKVxyXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcclxuICAgIC5vZmZlciB7XHJcbiAgICAgICAgJl9fYm94IHtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vICYtaW1nIHtcclxuXHJcbiAgICAgICAgLy8gICAgIG92ZXJmbG93OiBub25lO1xyXG4gICAgICAgIC8vICAgJjpob3ZlciB7XHJcbiAgICAgICAgLy8gICAgIG92ZXJmbG93OiB2aXNpYmxlO1xyXG4gICAgICAgIC8vICAgfVxyXG4gICAgICAgIC8vIH1cclxuXHJcbiAgICAgICAgJl9fbGVmdCB7XHJcbiAgICAgICAgICAgIC8vIGhlaWdodDogODB2aDtcclxuICAgICAgICAgICAgZmxleDogMjtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG5cclxuICAgICAgICAgICAgJi1pbWcge1xyXG4gICAgICAgICAgICAgICAgLy8gcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDc1JTtcclxuICAgICAgICAgICAgICAgIC8vIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIGVhc2U7XHJcblxyXG4gICAgICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAgICAgJi1ibG9jayB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcblxyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgcmlnaHQ6IC01MHB4O1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBza2V3KC00NWRlZyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19yaWdodCB7XHJcbiAgICAgICAgICAgIGZsZXg6IDE7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA1ZW07XHJcblxyXG4gICAgICAgICAgICAmLWltZyB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMzMwcHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDQyMHB4O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmLXRpbGUge1xyXG4gICAgICAgICAgICAgICAgJi0tb25lIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1ZW07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYtaG92ZXIge1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMWVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAub2ZmZXIge1xyXG4gICAgICAgICZfX2xlZnQge1xyXG4gICAgICAgICAgICBmbGV4OiAxO1xyXG5cclxuICAgICAgICAgICAgJi1ob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiA0ZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3JpZ2h0IHtcclxuICAgICAgICAgICAgZmxleDogMTtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcmVtO1xyXG5cclxuICAgICAgICAgICAgJi1pbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDM1MHB4O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyAmLWhvdmVyIHtcclxuICAgICAgICAgICAgLy8gICAgIHBhZGRpbmc6IDFlbTtcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy8gLm9mZmVyIHtcclxuLy8gICAgICZfX2JveCB7XHJcbi8vICAgICAgICAgZGlzcGxheTogZmxleDtcclxuLy8gICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgICZfX3RpbGUge1xyXG4vLyAgICAgICAgIGZsZXg6IDE7XHJcbi8vICAgICAgICAgbWFyZ2luOiAyZW0gMDtcclxuLy8gICAgICAgICAmLXRvcCB7XHJcbi8vICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuLy8gICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcclxuLy8gICAgICAgICAgICAgaGVpZ2h0OiAyMDBweDtcclxuLy8gICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbi8vICAgICAgICAgICAgICY6bnRoLWNoaWxkKDEpIHtcclxuLy8gICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRncmV5O1xyXG4vLyAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgfVxyXG5cclxuLy8gICAgICAgICAmLWJvdHRvbSB7XHJcbi8vICAgICAgICAgICAgIHBhZGRpbmc6IDJlbTtcclxuLy8gICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGdyZXk7XHJcbi8vICAgICAgICAgICAgIGJvcmRlci10b3A6IG5vbmU7XHJcbi8vICAgICAgICAgICAgIGEge1xyXG4vLyAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuLy8gICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuLy8gICAgICAgICAgICAgICAgIGNvbG9yOiAkcGluaztcclxuLy8gICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuLy8gICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4vLyAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogLjNzIGVhc2U7XHJcbi8vICAgICAgICAgICAgICAgICBpbWcge1xyXG4vLyAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMzBweDtcclxuLy8gICAgICAgICAgICAgICAgIH1cclxuXHJcbi8vICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9XHJcbi8vIH1cclxuXHJcbi8vIExhcmdlIGRldmljZXMgKGRlc2t0b3BzLCA5OTJweCBhbmQgdXApXHJcbi8vIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xyXG4vLyAgICAgLm9mZmVyIHtcclxuLy8gICAgICAgICAmX19ib3gge1xyXG4vLyAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4vLyAgICAgICAgIH1cclxuXHJcbi8vICAgICAgICAgJl9fdGlsZSB7XHJcbi8vICAgICAgICAgICAgIG1hcmdpbjogMCAyZW07XHJcblxyXG4vLyAgICAgICAgICAgICAmLXRvcCB7XHJcbi8vICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI3MHB4O1xyXG4vLyAgICAgICAgICAgICB9XHJcblxyXG4vLyAgICAgICAgICAgICAmLWJvdHRvbSB7XHJcbi8vICAgICAgICAgICAgICAgICBwYWRkaW5nOiA0ZW07XHJcbi8vICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9ICAgXHJcbi8vIH1cclxuXHJcbi8vIE5FV1NcclxuXHJcbi5uZXdzIHtcclxuICAgICZfX2JveCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RpbGUge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleDogMTtcclxuICAgICAgICBtYXJnaW46IDJlbSAwO1xyXG5cclxuICAgICAgICAmLWxlZnQge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEzMHB4O1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgJi0tb25lIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL25ld3MxLmpwZycpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmLS10d28ge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvbmV3czEuanBnJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtcmlnaHQge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZGF0ZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgICAgICBjb2xvcjogJGdyZXktdHdvO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xyXG4gICAgLm5ld3Mge1xyXG4gICAgICAgICZfX2JveCB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190aWxlIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIDJlbSAwIDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyBGVVRVUkVcclxuXHJcbi5mdXR1cmUge1xyXG4gICAgJl9fd3JhcHBlciB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2xlZnQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19yaWdodCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGhlaWdodDogNTB2aDtcclxuXHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAubGluZS1zdmctLWVpZ2h0IHtcclxuICAgICAgICAgICAgYm90dG9tOiAxMCU7XHJcbiAgICAgICAgICAgIGxlZnQ6IC0xMCU7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlWigxODBkZWcpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG4vLyBMYXJnZSBkZXZpY2VzIChkZXNrdG9wcywgOTkycHggYW5kIHVwKVxyXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcclxuICAgIC5mdXR1cmUge1xyXG4gICAgICAgICZfX3dyYXBwZXIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fbGVmdCB7XHJcbiAgICAgICAgICAgIGZsZXg6IDM7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMCA4ZW0gMCAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fcmlnaHQge1xyXG4gICAgICAgICAgICBmbGV4OiAyO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIEV4dHJhIGxhcmdlIGRldmljZXMgKGxhcmdlIGRlc2t0b3BzLCAxMjAwcHggYW5kIHVwKVxyXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAuZnV0dXJlIHtcclxuICAgICAgICAmX19sZWZ0IHtcclxuICAgICAgICAgICAgZmxleDogMTtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIDE1ZW0gMCAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fcmlnaHQge1xyXG4gICAgICAgICAgICBmbGV4OiAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuIl19 */
