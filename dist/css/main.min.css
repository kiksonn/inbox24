.wrapper{margin:0 auto;width:80%;max-width:1300px}.wrapper-small{margin:0 auto;width:80%;max-width:1100px}.section{padding:5em 0}.section-small{padding-bottom:3em}.title-two{color:#000;font-weight:700;font-size:2.8rem;margin-bottom:1em}.title-three{color:#000;font-size:2rem;font-weight:400}.title-four{font-size:1.9rem;font-weight:700;color:#000}.text{color:#000;font-size:1.8rem}.text-bold{font-weight:500}.text--white{color:#fff}a{text-decoration:none;cursor:pointer}.btn{display:flex;justify-content:space-around;align-items:center;height:70px;width:100%;color:#fff;background:linear-gradient(115deg,#332879,#372779 60%,#ad0c7a);padding:0 1em;overflow:hidden;font-size:2rem;border:none;border-radius:0;-webkit-clip-path:polygon(0 0,100% 0,100% 90%,75% 90%,65% 100%,0 100%);clip-path:polygon(0 0,100% 0,100% 90%,75% 90%,65% 100%,0 100%);margin:1em 0}.btn:hover{color:#fff;background:linear-gradient(115deg,#332879,#372779 45%,#ad0c7a 75%,#ad0c7a)}.btn img{height:25px;margin-left:2rem}.btn--white,.btn--white:hover{background:#fff;color:#000}.break{display:block}.white-block{position:absolute;width:35%;background-color:#fff}.white-block-right{height:40px;bottom:0;right:-50px;transform:skew(-45deg)}.white-block-left{height:20px;display:none;bottom:-20px;left:-50px;transform:skew(-45deg)}.white-block-clip{right:0;transform:skew(0);bottom:0;height:40px;-webkit-clip-path:polygon(15% 0,100% 0,100% 100%,0 100%);clip-path:polygon(15% 0,100% 0,100% 100%,0 100%)}.line{display:flex;position:relative;width:100%;height:20px}.line-block{position:absolute;height:100%}.line-block--one{width:32.5%;border-bottom:8px solid #352879;border-right:10px solid #352879;transform:skew(-45deg)}.line-block--two{width:calc(67.5% - 2px);border-top:8px solid;right:0;border-image-slice:1;border-image-source:linear-gradient(115deg,#332879,#372779 45%,#ad0c7a 75%,#ad0c7a);border-right:none;border-bottom:none;border-left:none}.line-svg{display:none;position:absolute}@media (min-width:768px){.title-two{font-size:3.5rem}.title-four{font-size:2.5rem}.text{font-size:2rem}.btn{width:300px;padding:0 2em}.white-block-left{display:block}}@media (min-width:992px){.section{padding:6em 0}.title-two{font-size:4.5rem}.title-three{font-size:2.2rem}}@media (min-width:1200px){.line-svg{display:block}}.navbar{position:relative;position:sticky;top:0;z-index:10;background-color:#fff;padding:0;box-shadow:0 2px 1px rgba(0,0,0,.09),0 4px 2px rgba(0,0,0,.09),0 8px 4px rgba(0,0,0,.09),0 16px 8px rgba(0,0,0,.09),0 32px 16px rgba(0,0,0,.09)}.navbar-brand{z-index:10;margin:0}.navbar-brand img{height:80px}.navbar .nav-link{font-size:2rem}.navbar a{color:#000}.navbar .dropdown-item{font-size:1.5rem}.navbar-toggler{padding:2em 1em;margin-right:1em}.container-fluid{padding:0;margin:0}.collapse{background-color:#fff}.nav-item{padding-left:1em}.dropdown-menu{background-color:#fff;border:none}.flag{height:25px}@media (min-width:992px){.container-fluid{width:80%;max-width:1300px;margin:0 auto}.nav-item{margin:0 1rem;padding:0}.nav-link{padding:1em}.dropdown-menu{border-radius:0;padding:0}.dropdown-item{padding:1em}}@media (min-width:1200px){.nav-item{margin-left:3rem}}.about__wrapper{position:relative}.about__box{display:flex;flex-direction:column}.about__tile{flex:1;margin:1.5em 0}.about__tile--one img{width:100%}.about__texts{margin-top:1rem;display:flex;flex-wrap:wrap;justify-content:center}.about__texts__four{margin:0 .3em .5em;letter-spacing:-1px}.about__link{color:#000;font-size:2rem}.about__link img{height:25px}.about__link:hover{color:#000}@media (min-width:768px){.about__box{flex-direction:row;align-items:center}.about__tile{margin:0}.about__tile--one img{width:80%;height:100%}.about__texts{flex-wrap:nowrap}.about__texts__four{margin:0 1em}}@media (min-width:1200px){.about__tile{margin:0}.about__tile--one img{width:65%}}.accordions__box{display:flex;flex-direction:column}.accordions__btns{display:flex}.accordions__btns--column{flex-direction:column}.accordions__tile{flex:1;margin:1.5em 0}.accordions__tile--one{display:flex;flex-direction:column}.accordions__tile-btn{flex:1;display:flex;justify-content:center;align-items:center;color:#000;padding:1em;font-size:1.4rem;margin:0;border:none;background-color:transparent;-webkit-clip-path:polygon(0 0,100% 0,100% 90%,75% 90%,65% 100%,0 100%);clip-path:polygon(0 0,100% 0,100% 90%,75% 90%,65% 100%,0 100%)}.accordions__tile-btn--active{color:#fff;background:linear-gradient(115deg,#332879,#372779 60%,#ad0c7a)}.accordions__tile-btn--active:hover{color:#fff;background:linear-gradient(115deg,#332879,#372779 45%,#ad0c7a 75%,#ad0c7a)}.accordions__tile--two{position:relative}.accordions__tile--two img{width:100%}.accordion{margin-top:5rem;display:flex;flex-direction:column}.accordion__tile{border-left:3px solid #e4e4e4;padding-left:1em;margin-bottom:1em;transition:border-left .5s ease}.accordion__btn{font-size:1.9rem;font-weight:700;color:#7f7f7f;cursor:pointer;transition:color .5s ease}.accordion__info{overflow:hidden;max-height:0;transition:max-height .5s ease}.accordion__info-text{font-size:1.6rem}@media (min-width:768px){.accordions__tile-btn{font-size:1.8rem}.accordions__btns--column{flex-direction:row}}@media (min-width:992px){.accordions__box{flex-direction:row}.accordions__tile--two img{display:block;width:80%;margin:0 auto}.accordion__btn{font-size:2.5rem}}.active{max-height:200px}.active-two{color:#000}.active-three{border-left:3px solid #000}.footer__top{position:relative;background:linear-gradient(115deg,#332879,#372779 45%,#ad0c7a 75%,#ad0c7a)}.footer__top--wrapper{display:flex;flex-direction:column}.footer__top-left{margin:3em 0}.footer__top-left img{width:100%}.footer__top-right{margin-bottom:3em}.footer__top-right a{transition:color .3s ease}.footer__top-right a:hover{color:#e3007a}.footer__top-right a img{transition:filter .3s ease}.footer__top-right a:hover img{filter:invert(16%) sepia(89%) saturate(6944%) hue-rotate(319deg) brightness(88%) contrast(104%)}.footer__bottom{padding-bottom:0}.footer__bottom--wrapper{display:flex;flex-direction:column}.footer__bottom-left a img{height:90px}.footer__bottom-tile--one{display:flex;flex-direction:row;margin:1em 0}.footer__bottom-tile--one a{border-radius:50%;padding:.5em;border:1px solid #000;margin:0 .3em;transition:transform .2s ease,filter .2s ease}.footer__bottom-tile--one a:first-child{margin-left:0}.footer__bottom-tile--one a img{height:20px;width:20px}.footer__bottom-tile--one a:hover{filter:invert(16%) sepia(89%) saturate(6944%) hue-rotate(319deg) brightness(88%) contrast(104%);transform:scale(1.1)}.footer__bottom-tile--nav a,.footer__bottom-tile--two a{font-weight:700}.footer__bottom-tile--nav a:hover,.footer__bottom-tile--two a:hover{text-decoration:underline;color:#000}.footer__bottom-tile--nav ul,.footer__bottom-tile--two ul{list-style-type:none;padding:0}.footer__bottom-tile--nav ul li a,.footer__bottom-tile--two ul li a{color:#000;font-weight:400}.footer__bar{margin:.5em 0 1.5em;font-size:1.8rem}@media (min-width:768px){.footer__top--wrapper{justify-content:center;flex-direction:row}.footer__top-left{margin:0}.footer__top-left img{width:100%;margin:-3em 0 3em}.footer__top-right{display:flex;flex-direction:column;justify-content:center;margin:0 0 0 2em}.footer__bottom-mid{display:flex;flex-wrap:wrap}.footer__bottom-tile--nav{flex:1;margin:1em}}@media (min-width:992px){.footer__top-left{overflow:visible;flex:2}.footer__top-left img{width:70%}.footer__top-right{flex:3}}@media (min-width:1200px){.footer__bottom-left{display:flex;flex-direction:column;justify-content:space-between}.footer__bottom--wrapper{flex-direction:row}.footer__bottom-mid{display:grid;grid-template-columns:repeat(2,1fr);gap:1rem 5rem;margin:0 10rem 0 15rem}}*,:after,:before{margin:0;padding:0;box-sizing:border-box}html{font-size:62.5%;scroll-behavior:smooth}body{font-size:1.8rem;overflow-x:hidden;background-color:#fff;color:#000;font-family:Poppins,sans-serif}::-moz-selection{background-color:#352879;color:#fff}::selection{background-color:#352879;color:#fff}::-webkit-scrollbar{width:15px}::-webkit-scrollbar-track{background-color:transparent}::-webkit-scrollbar-thumb{height:200px;background:linear-gradient(180deg,#332879,#372779 50%,#ad0c7a)}::-webkit-scrollbar-thumb:hover{background:linear-gradient(180deg,#332879,#372779 35%,#ad0c7a 75%,#ad0c7a)}.line-svg--one{right:-10%;top:20%;width:35%}.line-svg--two{right:0;top:0;width:50%;-o-object-fit:cover;object-fit:cover}.line-svg--three{left:0;bottom:10%;transform:rotate(180deg)}.line-svg--five{left:-10%;width:30%;bottom:15%;transform:rotate(180deg)}.line-svg--six{right:0;top:25%;width:40%;transform:rotate(180deg);z-index:-1}.line-svg--seven{bottom:10%;left:-20%;width:80%;z-index:-1}.spiner{position:fixed;display:flex;flex-direction:column;justify-content:center;align-items:center;top:0;bottom:0;right:0;left:0;z-index:100;transition:opacity .3s ease}.spiner,.spiner__img{background-color:#fff}.spiner__img{height:200px;animation:a 1s linear 1}.spiner__text{background-color:#fff;font-size:4rem;text-transform:uppercase;font-weight:700;color:#e3007a}@keyframes a{0%{transform:rotateY(0)}25%{transform:rotateY(60deg)}50%{transform:rotateY(1turn)}75%{transform:rotateY(60deg)}to{transform:rotateY(1turn)}}.cookie{position:fixed;display:flex;flex-direction:column;justify-content:center;align-items:center;left:50%;top:50%;transform:translate(-50%,-50%);padding:1em;width:100%;height:50vh;background:linear-gradient(115deg,#332879,#372779 60%,#ad0c7a);z-index:99}.cookie-img{height:60px}.cookie-heading{font-size:6rem;font-weight:700;color:#fff}.cookie-text{text-align:center;font-size:1.6rem;color:#fff}.cookie__box{display:flex}.cookie__box-link{margin:0 .3em;padding:.5em;background-color:#fff;color:#352879;border:2px solid #fff;transition:background-color .3s ease,color .3s ease;font-size:1.8rem}.cookie__box-link:hover{background-color:transparent;color:#fff}.hidden-cookies{display:none}@media (min-width:768px){.cookie{height:auto;padding:2em;max-width:420px}}.header{position:relative;height:calc(98vh - 85px);width:100%;overflow:hidden;background-image:url(../img/imgnc/header-small.jpg);background-size:cover;background-position:50%}.header__wrapper{display:flex;flex-direction:column;justify-content:center;align-items:flex-start;height:100%}.header__title{font-size:3.4rem;color:#fff;margin-bottom:2rem;font-weight:700}.div-margin{display:block;height:85px}@media (min-width:768px){.header__title{font-size:6rem}}@media (min-width:992px){.header{background-image:url(../img/imgnc/header-big.jpg)}.header__title{font-size:8rem}}.bar{position:relative;width:100%;height:450px;align-items:center;background-color:grey;background-size:cover;background-position:50%;overflow:hidden}.bar,.bar__wrapper{display:flex;justify-content:center}.bar__wrapper{flex-direction:column}.bar__title{font-size:3rem;color:#fff;font-weight:700}.bar__text{margin-top:.5em;color:#fff;font-size:2rem}.bar a{margin-top:2rem}.bar a,.bar a img{align-self:flex-end}.bar a img{height:30px}@media (min-width:768px){.bar{height:600px}.bar__title{font-size:5rem}}.offer{position:relative}.offer-title{color:#fff;font-size:2rem;font-weight:700}.offer__box{display:flex;flex-direction:column}.offer-img{position:relative;width:100%;height:60vh;background-size:cover;background-position:top;background-repeat:no-repeat}.offer-img--one{background-image:url(../img/offer1.jpg)}.offer-img--two{background-image:url(../img/offer2.jpg)}.offer-img--three{background-image:url(../img/offer3.jpg)}.offer__left{margin-bottom:3em}.offer__left-block{display:none}.offer__left-img:hover .offer__left-hover{opacity:1}.offer__left-hover{display:flex;flex-direction:column;justify-content:center;height:100%;padding:.5em;transition:opacity .3s ease;opacity:0;background-color:rgba(0,0,0,.5)}.offer__right-tile--one{margin-bottom:3em}.offer__right-img:hover .offer__right-hover{opacity:1}.offer__right-hover{display:flex;flex-direction:column;justify-content:center;height:100%;padding:.5em;transition:opacity .3s ease;opacity:0;background-color:rgba(0,0,0,.5)}@media (min-width:370px){.offer__left-hover,.offer__right-hover{padding:1em}}@media (min-width:768px){.offer__left-hover,.offer__right-hover{padding:2em}}@media (min-width:992px){.offer__box{flex-direction:row}.offer__left{flex:2;margin:0}.offer__left-img{width:100%;height:75%}.offer__left-block{display:block;position:absolute;width:40%;background-color:#fff;height:20px;bottom:0;right:-50px;transform:skew(-45deg)}.offer__right{flex:1;margin-left:5em}.offer__right-img{width:330px;height:420px}.offer__right-tile--one{margin-bottom:5em}.offer__right-hover{padding:1em}}@media (min-width:1200px){.offer__left{flex:1}.offer__left-hover{padding:4em}.offer__right{flex:1;margin-left:10rem}.offer__right-img{width:350px}}.news__box{display:flex;flex-direction:column}.news__tile{display:block;display:flex;flex:1;margin:2em 0;overflow:hidden}.news__tile:hover .news__tile-left{transform:scale(1.15)}.news__tile-left{transition:transform .3s ease;height:130px;width:100%;background-size:cover;background-position:50%}.news__tile-left--one,.news__tile-left--two{background-image:url(../img/news1.jpg)}.news__tile-right{display:flex;flex-direction:column;justify-content:space-around;width:100%;margin-left:2em}.news__tile .date{font-size:1.6rem;color:#7f7f7f}@media (min-width:1200px){.news__box{flex-direction:row}.news__tile{margin:0 2em 0 0}}.future__wrapper{display:flex;flex-direction:column}.future__left{margin-bottom:2em}.future__right{position:relative;height:50vh}.future__right img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.future__right .line-svg--eight{bottom:10%;left:-10%;width:100%;height:auto;transform:rotate(180deg)}@media (min-width:992px){.future__wrapper{display:flex;flex-direction:row}.future__left{flex:3;margin:0 8em 0 0}.future__right{flex:2;height:auto}}@media (min-width:1200px){.future__left{flex:1;margin:0 15em 0 0}.future__right{flex:1}}.text-bolder{font-weight:bolder}@media (min-width:768px){.privacy-policy p{font-size:2rem}}.information__tile{display:flex;flex-direction:column;margin-bottom:2em}.information__img{margin:1em 0}.information__img,.information__img img{width:100%;height:100%}.information__text{width:100%}.information .btn{text-align:left}@media (min-width:1360px){.information__tile{flex-direction:row;align-items:center}.information__text{margin-left:1em}}.support-instructions__box{display:flex;flex-direction:column}.support-instructions__tile{margin-bottom:1em}.support-instructions__tile-img img{width:100%}.support-instructions h4{margin:.5em 0}.support-instructions ul{list-style-type:square}.support-instructions ul a{color:#000;text-decoration:underline;transition:color .3s ease}.support-instructions ul a:hover{color:#e3007a}.support-instructions ul li{margin-bottom:.3em}@media (min-width:768px){.support-instructions__box{flex-direction:row}.support-instructions__tile--left{margin-left:2em}}.support-files__box{display:flex;flex-direction:column}.support-files p{display:flex;flex-direction:row;align-items:center;margin:.5em}.support-files p img{margin-right:.5em;width:35px}.support-files__tile{display:flex;flex-direction:column;justify-content:center;align-items:space-between;width:100%;padding:1.5em}.support-files__tile:nth-child(2n){background-color:#e4e4e4}.support-files__tile a{color:#000}.support-files__tile a img{width:25px;margin-left:.5em}.support-files__tile a:hover{text-decoration:underline}.support-files__tile--last{margin-bottom:5rem}.support-files__tile:hover{color:#fff;background:linear-gradient(115deg,#332879,#372779 45%,#ad0c7a 75%,#ad0c7a)}.support-files__tile:hover img{filter:invert(100%) sepia(0) saturate(2%) hue-rotate(326deg) brightness(106%) contrast(101%)}.support-files__tile:hover a{color:#fff}@media (min-width:768px){.support-files p{margin:0}.support-files__tile{flex-direction:row;justify-content:space-between;align-items:center}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
